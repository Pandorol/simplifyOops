{"version":3,"sources":["file:///G:/sxbs2/sxbs2/assets/core/common/storage/StorageManager.ts"],"names":["StorageManager","sys","PREVIEW","id","iss","encrypted","init","iis","setUser","getUser","set","key","value","keywords","getKey","console","error","encryptKey","warn","remove","JSON","stringify","e","encrypt","localStorage","setItem","get","defaultValue","str","getItem","decrypt","getNumber","r","Number","getBoolean","toLowerCase","getJson","parse","removeItem","clear"],"mappings":";;;gFAcaA,c;;;;;;;;;AAbJC,MAAAA,G,OAAAA,G;;AACAC,MAAAA,O,UAAAA,O;;;;;sFAFT;;;;;AAUA;AACA;AACA;AACA;gCACaF,c,GAAN,MAAMA,cAAN,CAAqB;AAAA;AAAA,eAChBG,EADgB,GACH,IADG;AAAA,eAEhBC,GAFgB,GAEQ,IAFR;AAAA;;AAIxB;AACqB,YAATC,SAAS,GAAY;AAC7B,iBAAO,CAACH,OAAR;AACH;AAED;;;AACAI,QAAAA,IAAI,CAACC,GAAD,EAAwB;AACxB,eAAKH,GAAL,GAAWG,GAAX;AACH;AAED;AACJ;AACA;AACA;;;AACIC,QAAAA,OAAO,CAACL,EAAD,EAAa;AAChB,eAAKA,EAAL,GAAUA,EAAV;AACH;;AACDM,QAAAA,OAAO,GAAG;AACN,iBAAO,KAAKN,EAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIO,QAAAA,GAAG,CAACC,GAAD,EAAcC,KAAd,EAA0B;AACzB,cAAIC,QAAQ,GAAG,KAAKC,MAAL,CAAYH,GAAZ,CAAf;;AAEA,cAAI,QAAQA,GAAZ,EAAiB;AACbI,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAd;AACA;AACH;;AACD,cAAI,KAAKX,SAAT,EAAoB;AAChBQ,YAAAA,QAAQ,GAAG,KAAKT,GAAL,CAASa,UAAT,CAAoBJ,QAApB,CAAX;AACH;;AACD,cAAI,QAAQD,KAAZ,EAAmB;AACfG,YAAAA,OAAO,CAACG,IAAR,CAAa,iBAAb;AACA,iBAAKC,MAAL,CAAYR,GAAZ;AACA;AACH;;AACD,cAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC;AAC7BG,YAAAA,OAAO,CAACC,KAAR,CAAc,WAAd;AACA;AACH;;AACD,cAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;AAC3B,gBAAI;AACAA,cAAAA,KAAK,GAAGQ,IAAI,CAACC,SAAL,CAAeT,KAAf,CAAR;AACH,aAFD,CAGA,OAAOU,CAAP,EAAU;AACNP,cAAAA,OAAO,CAACC,KAAR,0CAA4BJ,KAA5B;AACA;AACH;AACJ,WARD,MASK,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAChCA,YAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACH;;AAED,cAAI,KAAKP,SAAT,EAAoB;AAChBO,YAAAA,KAAK,GAAG,KAAKR,GAAL,CAASmB,OAAT,CAAiBX,KAAjB,CAAR;AACH;;AACDX,UAAAA,GAAG,CAACuB,YAAJ,CAAiBC,OAAjB,CAAyBZ,QAAzB,EAAmCD,KAAnC;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIc,QAAAA,GAAG,CAACf,GAAD,EAAcgB,YAAd,EAA8C;AAAA,cAAhCA,YAAgC;AAAhCA,YAAAA,YAAgC,GAAZ,EAAY;AAAA;;AAC7C,cAAI,QAAQhB,GAAZ,EAAiB;AACbI,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAd;AACA,mBAAO,IAAP;AACH;;AAEDL,UAAAA,GAAG,GAAG,KAAKG,MAAL,CAAYH,GAAZ,CAAN;;AAEA,cAAI,KAAKN,SAAT,EAAoB;AAChBM,YAAAA,GAAG,GAAG,KAAKP,GAAL,CAASa,UAAT,CAAoBN,GAApB,CAAN;AACH;;AAED,cAAIiB,GAAkB,GAAG3B,GAAG,CAACuB,YAAJ,CAAiBK,OAAjB,CAAyBlB,GAAzB,CAAzB;;AACA,cAAI,QAAQiB,GAAR,IAAe,OAAOA,GAAtB,IAA6B,KAAKvB,SAAtC,EAAiD;AAC7CuB,YAAAA,GAAG,GAAG,KAAKxB,GAAL,CAAS0B,OAAT,CAAiBF,GAAjB,CAAN;AACH;;AAED,cAAI,SAASA,GAAb,EAAkB;AACd,mBAAOD,YAAP;AACH;;AACD,iBAAOC,GAAP;AACH;AAED;;;AACAG,QAAAA,SAAS,CAACpB,GAAD,EAAcgB,YAAd,EAAgD;AAAA,cAAlCA,YAAkC;AAAlCA,YAAAA,YAAkC,GAAX,CAAW;AAAA;;AACrD,cAAMK,CAAC,GAAG,KAAKN,GAAL,CAASf,GAAT,CAAV;;AACA,cAAIqB,CAAC,IAAI,GAAT,EAAc;AACV,mBAAOC,MAAM,CAACD,CAAD,CAAb;AACH;;AACD,iBAAOC,MAAM,CAACD,CAAD,CAAN,IAAaL,YAApB;AACH;AAED;;;AACAO,QAAAA,UAAU,CAACvB,GAAD,EAAuB;AAC7B,cAAMqB,CAAC,GAAG,KAAKN,GAAL,CAASf,GAAT,CAAV;AACA,iBAAOqB,CAAC,CAACG,WAAF,OAAoB,MAA3B;AACH;AAED;;;AACAC,QAAAA,OAAO,CAACzB,GAAD,EAAcgB,YAAd,EAAuC;AAC1C,cAAMK,CAAC,GAAG,KAAKN,GAAL,CAASf,GAAT,CAAV;AACA,iBAAQqB,CAAC,IAAIZ,IAAI,CAACiB,KAAL,CAAWL,CAAX,CAAN,IAAwBL,YAA/B;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIR,QAAAA,MAAM,CAACR,GAAD,EAAc;AAChB,cAAI,QAAQA,GAAZ,EAAiB;AACbI,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAd;AACA;AACH;;AAED,cAAIH,QAAQ,GAAG,KAAKC,MAAL,CAAYH,GAAZ,CAAf;;AAEA,cAAI,KAAKN,SAAT,EAAoB;AAChBQ,YAAAA,QAAQ,GAAG,KAAKT,GAAL,CAASa,UAAT,CAAoBJ,QAApB,CAAX;AACH;;AACDZ,UAAAA,GAAG,CAACuB,YAAJ,CAAiBc,UAAjB,CAA4BzB,QAA5B;AACH;AAED;;;AACA0B,QAAAA,KAAK,GAAG;AACJtC,UAAAA,GAAG,CAACuB,YAAJ,CAAiBe,KAAjB;AACH;AAED;;;AACQzB,QAAAA,MAAM,CAACH,GAAD,EAAsB;AAChC,cAAI,KAAKR,EAAL,IAAW,IAAX,IAAmB,KAAKA,EAAL,IAAW,EAAlC,EAAsC;AAClC,mBAAOQ,GAAP;AACH;;AACD,iBAAU,KAAKR,EAAf,SAAqBQ,GAArB;AACH;;AApJuB,O","sourcesContent":["//cpall\r\nimport { sys } from \"cc\";\r\nimport { PREVIEW } from \"cc/env\";\r\n\r\nexport interface IStorageSecurity {\r\n    decrypt(str: string): string;\r\n    encrypt(str: string): string;\r\n    encryptKey(str: string): string;\r\n}\r\n\r\n/** \r\n * 本地存储 \r\n * @help    https://gitee.com/dgflash/oops-framework/wikis/pages?sort_id=12037957&doc_id=2873565\r\n */\r\nexport class StorageManager {\r\n    private id: string = null!;\r\n    private iss: IStorageSecurity = null!;\r\n\r\n    /** 数据加密开关 */\r\n    private get encrypted(): boolean {\r\n        return !PREVIEW;\r\n    }\r\n\r\n    /** 本地存储数据加密方式初始化 */\r\n    init(iis: IStorageSecurity) {\r\n        this.iss = iis;\r\n    }\r\n\r\n    /**\r\n     * 设置用户唯一标识\r\n     * @param id \r\n     */\r\n    setUser(id: string) {\r\n        this.id = id;\r\n    }\r\n    getUser() {\r\n        return this.id;\r\n    }\r\n    /**\r\n     * 存储本地数据\r\n     * @param key 存储key\r\n     * @param value 存储值\r\n     * @returns \r\n     */\r\n    set(key: string, value: any) {\r\n        let keywords = this.getKey(key);\r\n\r\n        if (null == key) {\r\n            console.error(\"存储的key不能为空\");\r\n            return;\r\n        }\r\n        if (this.encrypted) {\r\n            keywords = this.iss.encryptKey(keywords);\r\n        }\r\n        if (null == value) {\r\n            console.warn(\"存储的值为空，则直接移除该存储\");\r\n            this.remove(key);\r\n            return;\r\n        }\r\n        if (typeof value === 'function') {\r\n            console.error(\"储存的值不能为方法\");\r\n            return;\r\n        }\r\n        if (typeof value === 'object') {\r\n            try {\r\n                value = JSON.stringify(value);\r\n            }\r\n            catch (e) {\r\n                console.error(`解析失败，str = ${value}`);\r\n                return;\r\n            }\r\n        }\r\n        else if (typeof value === 'number') {\r\n            value = value + \"\";\r\n        }\r\n\r\n        if (this.encrypted) {\r\n            value = this.iss.encrypt(value);\r\n        }\r\n        sys.localStorage.setItem(keywords, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定关键字的数据\r\n     * @param key          获取的关键字\r\n     * @param defaultValue 获取的默认值\r\n     * @returns \r\n     */\r\n    get(key: string, defaultValue: any = \"\"): string {\r\n        if (null == key) {\r\n            console.error(\"存储的key不能为空\");\r\n            return null!;\r\n        }\r\n\r\n        key = this.getKey(key);\r\n\r\n        if (this.encrypted) {\r\n            key = this.iss.encryptKey(key);\r\n        }\r\n\r\n        let str: string | null = sys.localStorage.getItem(key);\r\n        if (null != str && '' !== str && this.encrypted) {\r\n            str = this.iss.decrypt(str);\r\n        }\r\n\r\n        if (null === str) {\r\n            return defaultValue;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /** 获取指定关键字的数值 */\r\n    getNumber(key: string, defaultValue: number = 0): number {\r\n        const r = this.get(key);\r\n        if (r == \"0\") {\r\n            return Number(r);\r\n        }\r\n        return Number(r) || defaultValue;\r\n    }\r\n\r\n    /** 获取指定关键字的布尔值 */\r\n    getBoolean(key: string): boolean {\r\n        const r = this.get(key);\r\n        return r.toLowerCase() === 'true';\r\n    }\r\n\r\n    /** 获取指定关键字的JSON对象 */\r\n    getJson(key: string, defaultValue?: any): any {\r\n        const r = this.get(key);\r\n        return (r && JSON.parse(r)) || defaultValue;\r\n    }\r\n\r\n    /**\r\n     * 删除指定关键字的数据\r\n     * @param key 需要移除的关键字\r\n     * @returns \r\n     */\r\n    remove(key: string) {\r\n        if (null == key) {\r\n            console.error(\"存储的key不能为空\");\r\n            return;\r\n        }\r\n\r\n        let keywords = this.getKey(key);\r\n\r\n        if (this.encrypted) {\r\n            keywords = this.iss.encryptKey(keywords);\r\n        }\r\n        sys.localStorage.removeItem(keywords);\r\n    }\r\n\r\n    /** 清空整个本地存储 */\r\n    clear() {\r\n        sys.localStorage.clear();\r\n    }\r\n\r\n    /** 获取数据分组关键字 */\r\n    private getKey(key: string): string {\r\n        if (this.id == null || this.id == \"\") {\r\n            return key;\r\n        }\r\n        return `${this.id}_${key}`;\r\n    }\r\n}"]}