{"version":3,"sources":["file:///G:/sxbs2/sxbs2/assets/core/common/audio/AudioEffectPool.ts"],"names":["AudioEffectPool","AudioClip","Node","NodePool","oops","resLoader","AudioEffect","AE_ID_MAX","_switch","_volume","pool","effects","Map","res","_aeId","switch","value","stop","volume","forEach","ae","getAeId","load","url","bundleName","onPlayComplete","defaultBundleName","Promise","resolve","reject","aeid","key","uuid","clip","get","set","loadAsync","node","size","name","parent","audio","addComponent","getComponent","onComplete","put","play","delete","release","destroy","clear","pause"],"mappings":"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","sourcesContent":["//cpall\r\nimport { AudioClip, Node, NodePool } from \"cc\";\r\nimport { oops } from \"../../Oops\";\r\nimport { resLoader } from \"../loader/ResLoader\";\r\nimport { AudioEffect } from \"./AudioEffect\";\r\n\r\nconst AE_ID_MAX = 30000;\r\n\r\n/** 音效池 */\r\nexport class AudioEffectPool {\r\n    private _switch: boolean = true;\r\n    /** 音效开关 */\r\n    public get switch(): boolean {\r\n        return this._switch;\r\n    }\r\n    public set switch(value: boolean) {\r\n        this._switch = value;\r\n        if (value) this.stop();\r\n    }\r\n\r\n    private _volume: number = 1;\r\n    /** 所有音效音量 */\r\n    get volume(): number {\r\n        return this._volume;\r\n    }\r\n    set volume(value: number) {\r\n        this._volume = value;\r\n\r\n        this.effects.forEach(ae => {\r\n            ae.volume = value;\r\n        });\r\n    }\r\n\r\n    /** 音效播放器对象池 */\r\n    private pool: NodePool = new NodePool();\r\n    /** 对象池集合 */\r\n    private effects: Map<string, AudioEffect> = new Map();\r\n    /** 用过的音效资源记录 */\r\n    private res: Map<string, string> = new Map();\r\n\r\n    private _aeId: number = 0;\r\n    /** 获取请求唯一编号 */\r\n    private getAeId() {\r\n        if (this._aeId == AE_ID_MAX) this._aeId = 1;\r\n        this._aeId++;\r\n        return this._aeId;\r\n    }\r\n\r\n    /**\r\n     * 加载与播放音效\r\n     * @param url                  音效资源地址与音效资源\r\n     * @param bundleName           资源包名\r\n     * @param onPlayComplete       播放完成回调\r\n     * @returns \r\n     */\r\n    async load(url: string | AudioClip, bundleName: string = resLoader.defaultBundleName, onPlayComplete?: Function): Promise<number> {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!this.switch) return resolve(-1);\r\n\r\n            let aeid = this.getAeId();\r\n            let key: string;\r\n            if (url instanceof AudioClip) {\r\n                key = url.uuid;\r\n            }\r\n            else {\r\n                key = `${bundleName}_${url}`;\r\n            }\r\n            key += \"_\" + aeid;\r\n\r\n            // 创建音效资源\r\n            let clip: AudioClip;\r\n            if (url instanceof AudioClip) {\r\n                clip = url;\r\n            }\r\n            else {\r\n                clip = resLoader.get(url, AudioClip, bundleName)!;\r\n                if (!clip) {\r\n                    this.res.set(bundleName, url);\r\n                    clip = await resLoader.loadAsync(bundleName, url, AudioClip);\r\n                }\r\n            }\r\n\r\n            // 获取音效果播放器播放音乐\r\n            let ae: AudioEffect;\r\n            let node: Node = null!;\r\n            if (this.pool.size() == 0) {\r\n                node = new Node();\r\n                node.name = \"AudioEffect\";\r\n                node.parent = oops.audio.node;\r\n                ae = node.addComponent(AudioEffect)!;\r\n            }\r\n            else {\r\n                node = this.pool.get()!;\r\n                ae = node.getComponent(AudioEffect)!;\r\n            }\r\n            ae.onComplete = () => {\r\n                this.put(aeid, url, bundleName);       // 播放完回收对象\r\n                onPlayComplete && onPlayComplete();\r\n                // console.log(`【音效】回收，池中剩余音效播放器【${this.pool.size()}】`);\r\n            };\r\n\r\n            // 记录正在播放的音效播放器\r\n            this.effects.set(key, ae);\r\n\r\n            ae.volume = this.volume;\r\n            ae.clip = clip;\r\n            ae.play();\r\n\r\n            resolve(aeid);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 回收音效播放器\r\n     * @param aeid          播放器编号\r\n     * @param url           音效路径\r\n     * @param bundleName    资源包名\r\n     */\r\n    put(aeid: number, url: string | AudioClip, bundleName: string = resLoader.defaultBundleName) {\r\n        let key: string;\r\n        if (url instanceof AudioClip) {\r\n            key = url.uuid;\r\n        }\r\n        else {\r\n            key = `${bundleName}_${url}`;\r\n        }\r\n        key += \"_\" + aeid;\r\n\r\n        let ae = this.effects.get(key);\r\n        if (ae && ae.clip) {\r\n            this.effects.delete(key);\r\n            ae.stop();\r\n            this.pool.put(ae.node);\r\n        }\r\n    }\r\n\r\n    /** 释放所有音效资源与对象池中播放器 */\r\n    release() {\r\n        // 释放正在播放的音效\r\n        this.effects.forEach(ae => {\r\n            ae.node.destroy();\r\n        });\r\n        this.effects.clear();\r\n\r\n        // 释放音效资源\r\n        this.res.forEach((url: string, bundleName: string) => {\r\n            resLoader.release(bundleName, url);\r\n        });\r\n\r\n        // 释放池中播放器\r\n        this.pool.clear();\r\n    }\r\n\r\n    /** 停止播放所有音效 */\r\n    stop() {\r\n        this.effects.forEach(ae => {\r\n            ae.stop();\r\n        });\r\n    }\r\n\r\n    /** 恢复所有音效 */\r\n    play() {\r\n        if (!this.switch) return;\r\n\r\n        this.effects.forEach(ae => {\r\n            ae.play();\r\n        });\r\n    }\r\n\r\n    /** 暂停所有音效 */\r\n    pause() {\r\n        if (!this.switch) return;\r\n\r\n        this.effects.forEach(ae => {\r\n            ae.pause();\r\n        });\r\n    }\r\n}"]}