{"version":3,"sources":["file:///E:/sxbs2/sxbs2/assets/core/utils/ListItem.ts"],"names":["_decorator","Button","Component","Enum","EventHandler","Node","Sprite","SpriteFrame","tween","Tween","UITransform","Vec3","DEV","ccclass","property","disallowMultiple","menu","executionOrder","SelectedType","ListItem","type","tooltip","visible","selectedMode","NONE","SWITCH","_unselectedSpriteFrame","_selected","_btnCom","list","_eventReg","listId","selected","val","selectedFlag","TOGGLE","active","sp","getComponent","spriteFrame","selectedSpriteFrame","btnCom","node","onLoad","com","onDestroy","off","EventType","SIZE_CHANGED","_onSizeChange","_registerEvent","clickEvents","unshift","createEvt","adaptiveSize","on","_onItemAdaptive","component","handlerName","isValid","name","match","pop","replace","evt","target","handler","showAni","aniType","callFunc","del","t","twe","ut","to","scale","by","position","height","width","call","_delSingleItem","n","displayData","length","id","splice","start","onClickThis","selectedId"],"mappings":"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","sourcesContent":["\r\nconst { ccclass, property, disallowMultiple, menu, executionOrder } = _decorator;\r\nimport { _decorator, Button, Component, Enum, EventHandler, Node, Sprite, SpriteFrame, tween, Tween, UITransform, Vec3 } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport List from './List';\r\n\r\nenum SelectedType {\r\n    NONE = 0,\r\n    TOGGLE = 1,\r\n    SWITCH = 2,\r\n}\r\n\r\n@ccclass\r\n@disallowMultiple()\r\n@menu('List Item')\r\n@executionOrder(-5001)          //先于List\r\nexport default class ListItem extends Component {\r\n    //图标\r\n    @property({ type: Sprite, tooltip: DEV && '图标' })\r\n    icon: Sprite = null;\r\n    //标题\r\n    @property({ type: Node, tooltip: DEV && '标题' })\r\n    title: Node = null;\r\n    //选择模式\r\n    @property({\r\n        type: Enum(SelectedType),\r\n        tooltip: DEV && '选择模式'\r\n    })\r\n    selectedMode: SelectedType = SelectedType.NONE;\r\n    //被选标志\r\n    @property({\r\n        type: Node, tooltip: DEV && '被选标识',\r\n        visible() { return this.selectedMode > SelectedType.NONE }\r\n    })\r\n    selectedFlag: Node = null;\r\n    //被选择的SpriteFrame\r\n    @property({\r\n        type: SpriteFrame, tooltip: DEV && '被选择的SpriteFrame',\r\n        visible() { return this.selectedMode == SelectedType.SWITCH }\r\n    })\r\n    selectedSpriteFrame: SpriteFrame = null;\r\n    //未被选择的SpriteFrame\r\n    _unselectedSpriteFrame: SpriteFrame = null;\r\n    //自适应尺寸\r\n    @property({\r\n        tooltip: DEV && '自适应尺寸（宽或高）',\r\n    })\r\n    adaptiveSize: boolean = false;\r\n    //选择\r\n    _selected: boolean = false;\r\n    set selected(val: boolean) {\r\n        this._selected = val;\r\n        Tween\r\n        if (!this.selectedFlag)\r\n            return;\r\n        switch (this.selectedMode) {\r\n            case SelectedType.TOGGLE:\r\n                this.selectedFlag.active = val;\r\n                break;\r\n            case SelectedType.SWITCH:\r\n                let sp: Sprite = this.selectedFlag.getComponent(Sprite);\r\n                if (sp) {\r\n                    sp.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n    //按钮组件\r\n    private _btnCom: any;\r\n    get btnCom() {\r\n        if (!this._btnCom)\r\n            this._btnCom = this.node.getComponent(Button);\r\n        return this._btnCom;\r\n    }\r\n    //依赖的List组件\r\n    public list: List;\r\n    //是否已经注册过事件\r\n    private _eventReg = false;\r\n    //序列id\r\n    public listId: number;\r\n\r\n    onLoad() {\r\n        // //没有按钮组件的话，selectedFlag无效\r\n        // if (!this.btnCom)\r\n        //     this.selectedMode == SelectedType.NONE;\r\n        //有选择模式时，保存相应的东西\r\n        if (this.selectedMode == SelectedType.SWITCH) {\r\n            let com: Sprite = this.selectedFlag.getComponent(Sprite);\r\n            this._unselectedSpriteFrame = com.spriteFrame;\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n    }\r\n\r\n    _registerEvent() {\r\n        if (!this._eventReg) {\r\n            if (this.btnCom && this.list.selectedMode > 0) {\r\n                this.btnCom.clickEvents.unshift(this.createEvt(this, 'onClickThis'));\r\n            }\r\n            if (this.adaptiveSize) {\r\n                this.node.on(Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n            }\r\n            this._eventReg = true;\r\n        }\r\n    }\r\n\r\n    _onSizeChange() {\r\n        this.list._onItemAdaptive(this.node);\r\n    }\r\n    /**\r\n     * 创建事件\r\n     * @param {cc.Component} component 组件脚本\r\n     * @param {string} handlerName 触发函数名称\r\n     * @param {cc.Node} node 组件所在node（不传的情况下取component.node）\r\n     * @returns cc.Component.EventHandler\r\n     */\r\n    createEvt(component: Component, handlerName: string, node: Node = null) {\r\n        if (!component.isValid)\r\n            return;//有些异步加载的，节点以及销毁了。\r\n        component['comName'] = component['comName'] || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\r\n        let evt = new EventHandler();\r\n        evt.target = node || component.node;\r\n        evt.component = component['comName'];\r\n        evt.handler = handlerName;\r\n        return evt;\r\n    }\r\n\r\n    showAni(aniType: number, callFunc: Function, del: boolean) {\r\n        let t: any = this;\r\n        let twe: Tween<Node>;\r\n        let ut: UITransform = t.node.getComponent(UITransform);\r\n        switch (aniType) {\r\n            case 0: //向上消失\r\n                twe = tween(t.node)\r\n                    .to(.2, { scale: new Vec3(.7, .7) })\r\n                    .by(.3, { position: new Vec3(0, ut.height * 2) });\r\n                break;\r\n            case 1: //向右消失\r\n                twe = tween(t.node)\r\n                    .to(.2, { scale: new Vec3(.7, .7) })\r\n                    .by(.3, { position: new Vec3(ut.width * 2, 0) });\r\n                break;\r\n            case 2: //向下消失\r\n                twe = tween(t.node)\r\n                    .to(.2, { scale: new Vec3(.7, .7) })\r\n                    .by(.3, { position: new Vec3(0, ut.height * -2) });\r\n                break;\r\n            case 3: //向左消失\r\n                twe = tween(t.node)\r\n                    .to(.2, { scale: new Vec3(.7, .7) })\r\n                    .by(.3, { position: new Vec3(ut.width * -2, 0) });\r\n                break;\r\n            default: //默认：缩小消失\r\n                twe = tween(t.node)\r\n                    .to(.3, { scale: new Vec3(.1, .1) });\r\n                break;\r\n        }\r\n\r\n        if (callFunc || del) {\r\n            twe.call(() => {\r\n                if (del) {\r\n                    t.list._delSingleItem(t.node);\r\n                    for (let n: number = t.list.displayData.length - 1; n >= 0; n--) {\r\n                        if (t.list.displayData[n].id == t.listId) {\r\n                            t.list.displayData.splice(n, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                callFunc();\r\n            });\r\n        }\r\n        twe.start();\r\n    }\r\n\r\n    onClickThis() {\r\n        this.list.selectedId = this.listId;\r\n    }\r\n\r\n}\r\n"]}