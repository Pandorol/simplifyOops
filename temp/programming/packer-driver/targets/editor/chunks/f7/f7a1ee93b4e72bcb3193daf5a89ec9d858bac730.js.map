{"version":3,"sources":["file:///G:/sxbs2/sxbs2/assets/core/utils/List.ts"],"names":["_decorator","CCBoolean","CCFloat","CCInteger","Component","Enum","EventHandler","instantiate","isValid","Layout","Node","NodePool","Prefab","ScrollView","Size","tween","UITransform","Vec3","Widget","DEV","ListItem","ccclass","property","disallowMultiple","menu","executionOrder","requireComponent","TemplateType","SlideType","SelectedType","List","type","tooltip","visible","templateType","NODE","PREFAB","range","slide","_slideMode","PAGE","val","slideMode","NORMAL","cyclic","virtual","lackCenter","lackSlide","selectedMode","NONE","SINGLE","serializable","_selectedId","_lastSelectedId","multSelected","_forceUpdate","_align","_horizontalDir","_verticalDir","_startAxis","_alignCalcType","content","_contentUt","firstListId","displayItemNum","_updateDone","_updateCounter","_actualNumItems","_cyclicNum","_cyclicPos1","_cyclicPos2","_inited","_scrollView","_layout","_resizeMode","_topGap","_rightGap","_bottomGap","_leftGap","_columnGap","_lineGap","_colLineNum","_lastDisplayData","displayData","_pool","_itemTmp","_itemTmpUt","_needUpdateWidget","_itemSize","_sizeType","_customSize","frameCount","_aniDelRuning","_aniDelCB","_aniDelItem","_aniDelBeforePos","_aniDelBeforeScale","viewTop","viewRight","viewBottom","viewLeft","_doneAfterUpdate","elasticTop","elasticRight","elasticBottom","elasticLeft","scrollToListId","adhering","_adheringBarrier","nearestListId","curPageNum","_beganPos","_scrollPos","_curScrollIsTouch","_scrollToListId","_scrollToEndTime","_scrollToSo","_lack","_allItemSize","_allItemSizeNoEdge","_scrollItem","_thisNodeUt","onScrollEnded","onScrollToped","_virtual","_numItems","_onScrolling","updateRate","_updateRate","selectedId","t","item","repeatEventSingle","getItemByListId","listItem","getComponent","selected","lastItem","selectedEvent","emitEvents","MULT","bool","sub","indexOf","push","splice","numItems","checkInited","console","error","_resizeContent","frameByFrameRenderNum","layout","enabled","_delRedundantItem","len","n","_createOrUpdateItem2","scrollView","onLoad","_init","onDestroy","destroy","tmpNode","clear","onEnable","_registerEvent","position","scale","onDisable","_unregisterEvent","node","on","EventType","TOUCH_START","_onTouchStart","_onTouchUp","TOUCH_CANCEL","_onTouchCancelled","_onScrollBegan","_onScrollEnded","SIZE_CHANGED","_onSizeChanged","off","name","resizeMode","startAxis","paddingTop","paddingRight","paddingBottom","paddingLeft","spacingX","spacingY","verticalDirection","horizontalDirection","setTemplateItem","tmpPrefab","ADHERING","inertia","_onMouseWheel","_processAutoScrolling","bind","_startBounceBackIfNeeded","Type","HORIZONTAL","HorizontalDirection","LEFT_TO_RIGHT","RIGHT_TO_LEFT","VERTICAL","VerticalDirection","TOP_TO_BOTTOM","BOTTOM_TO_TOP","GRID","AxisDirection","removeAllChildren","dt","OUT_OF_BOUNDARY_BREAKING_FACTOR","EPSILON","ZERO","quintEaseOut","time","sv","isAutoScrollBrake","brakingFactor","percentage","Math","min","clonedAutoScrollTargetDelta","clone","multiplyScalar","clonedAutoScrollStartPosition","add","reachedEnd","abs","fireEvent","SCROLL_ENG_WITH_THRESHOLD","brakeOffsetPosition","subtract","set","moveDelta","outOfBoundary","equals","deltaMove","SCROLLING","SCROLL_ENDED","ResizeMode","CHILDREN","cellSize","itemUt","width","height","com","remove","trimW","floor","trimH","printLog","result","fixed","_getFixedSize","count","lineNum","ceil","colNum","totalSize","spacing","_cyclicAllItemSize","_cycilcAllItemSizeNoEdge","slideOffset","targetWH","ev","scrollPos","getPosition","y","x","addVal","contentPos","z","setPosition","isAutoScrolling","_calcViewPos","vTop","vRight","vBottom","vLeft","itemPos","curId","endId","breakFor","_calcItemPos","right","left","length","bottom","top","ww","hh","id","haveDataChange","sort","a","b","c","_createOrUpdateItem","_calcNearestItem","itemX","itemY","cs","offset","anchorX","anchorY","colLine","_calcExistItemPos","ut","pos","data","getItemPos","listId","parseInt","scrollOffset","getScrollOffset","maxScrollOffset","getMaxScrollOffset","to","start","adhere","_pageAdhere","captureListeners","isMe","eventPhase","Event","AT_TARGET","target","itemNode","_listId","parent","simulate","_onItemAdaptive","updateAll","unschedule","scrollTo","max","Date","getTime","curPos","dis","pageDistance","canSkip","timeInSecond","prePage","nextPage","update","canGet","size","get","setContentSize","_resetItemSize","addChild","widget","updateAlignment","setSiblingIndex","children","list","renderEvent","_updateListItem","_updateItemPos","listIdOrItem","isNaN","setMultSelected","args","Array","isArray","getMultSelected","hasMultSelected","updateItem","_getOutsideItem","find","d","arr","isCached","put","m","_delSingleItem","removeFromParent","aniDelItem","callFunc","aniType","warn","curLastId","resetSelectedId","showAni","newId","newData","newCustomSize","idNumber","sec","twe","haveCB","posData","call","overStress","updateLayout","targetX","targetY","viewPos","comparePos","runScroll","scrollToOffset","scheduleOnce","center","skipPage","pageNum","pageChangeEvent","calcCustomSize","temp","Object","keys"],"mappings":"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","sourcesContent":["// https://github.com/gh-kL/cocoscreator-list\r\nconst { ccclass, property, disallowMultiple, menu, executionOrder, requireComponent } = _decorator;\r\nimport { _decorator, CCBoolean, CCFloat, CCInteger, Component, Enum, EventHandler, instantiate, isValid, Layout, Node, NodePool, Prefab, ScrollView, Size, tween, Tween, UITransform, Vec2, Vec3, Widget } from 'cc';\r\nimport { DEV } from 'cc/env';\r\nimport ListItem from './ListItem';\r\n\r\n\r\nenum TemplateType {\r\n    NODE = 1,\r\n    PREFAB = 2,\r\n}\r\n\r\nenum SlideType {\r\n    NORMAL = 1,//普通\r\n    ADHERING = 2,//粘附模式，将强制关闭滚动惯性\r\n    PAGE = 3,//页面模式，将强制关闭滚动惯性\r\n}\r\n\r\nenum SelectedType {\r\n    NONE = 0,\r\n    SINGLE = 1,//单选\r\n    MULT = 2,//多选\r\n}\r\n\r\n@ccclass\r\n@disallowMultiple()\r\n@menu('List')\r\n@requireComponent(ScrollView)\r\n//脚本生命周期回调的执行优先级。小于 0 的脚本将优先执行，大于 0 的脚本将最后执行。该优先级只对 onLoad, onEnable, start, update 和 lateUpdate 有效，对 onDisable 和 onDestroy 无效。\r\n@executionOrder(-5000)\r\nexport default class List extends Component {\r\n    //模板类型\r\n    @property({ type: Enum(TemplateType), tooltip: DEV && '模板类型', })\r\n    private templateType: TemplateType = TemplateType.NODE;\r\n    //模板Item（Node）\r\n    @property({\r\n        type: Node,\r\n        tooltip: DEV && '模板Item',\r\n        visible() { return this.templateType == TemplateType.NODE; }\r\n    })\r\n    tmpNode: Node = null;\r\n    //模板Item（Prefab）\r\n    @property({\r\n        type: Prefab,\r\n        tooltip: DEV && '模板Item',\r\n        visible() { return this.templateType == TemplateType.PREFAB; }\r\n    })\r\n    tmpPrefab: Prefab = null;\r\n    //滑动模式\r\n    @property({})\r\n    private _slideMode: SlideType = SlideType.NORMAL;\r\n    @property({\r\n        type: Enum(SlideType),\r\n        tooltip: DEV && '滑动模式'\r\n    })\r\n    set slideMode(val: SlideType) {\r\n        this._slideMode = val;\r\n    }\r\n    get slideMode() {\r\n        return this._slideMode;\r\n    }\r\n    //翻页作用距离\r\n    @property({\r\n        type: CCFloat,\r\n        range: [0, 1, .1],\r\n        tooltip: DEV && '翻页作用距离',\r\n        slide: true,\r\n        visible() { return this._slideMode == SlideType.PAGE; }\r\n    })\r\n    public pageDistance: number = .3;\r\n    //页面改变事件\r\n    @property({\r\n        type: EventHandler,\r\n        tooltip: DEV && '页面改变事件',\r\n        visible() { return this._slideMode == SlideType.PAGE; }\r\n    })\r\n    private pageChangeEvent: EventHandler = new EventHandler();\r\n    //是否为虚拟列表（动态列表）\r\n    @property({})\r\n    private _virtual: boolean = true;\r\n    @property({\r\n        type: CCBoolean,\r\n        tooltip: DEV && '是否为虚拟列表（动态列表）'\r\n    })\r\n    set virtual(val: boolean) {\r\n        if (val != null)\r\n            this._virtual = val;\r\n        if (!DEV && this._numItems != 0) {\r\n            this._onScrolling();\r\n        }\r\n    }\r\n    get virtual() {\r\n        return this._virtual;\r\n    }\r\n    //是否为循环列表\r\n    @property({\r\n        tooltip: DEV && '是否为循环列表',\r\n        visible() {\r\n            let val: boolean = /*this.virtual &&*/ this.slideMode == SlideType.NORMAL;\r\n            if (!val)\r\n                this.cyclic = false;\r\n            return val;\r\n        }\r\n    })\r\n    public cyclic: boolean = false;\r\n    //缺省居中\r\n    @property({\r\n        tooltip: DEV && 'Item数量不足以填满Content时，是否居中显示Item（不支持Grid布局）',\r\n        visible() { return this.virtual; }\r\n    })\r\n    public lackCenter: boolean = false;\r\n    //缺省可滑动\r\n    @property({\r\n        tooltip: DEV && 'Item数量不足以填满Content时，是否可滑动',\r\n        visible() {\r\n            let val: boolean = this.virtual && !this.lackCenter;\r\n            if (!val)\r\n                this.lackSlide = false;\r\n            return val;\r\n        }\r\n    })\r\n    public lackSlide: boolean = false;\r\n    //刷新频率\r\n    @property({ type: CCInteger })\r\n    private _updateRate: number = 0;\r\n    @property({\r\n        type: CCInteger,\r\n        range: [0, 6, 1],\r\n        tooltip: DEV && '刷新频率（值越大刷新频率越低、性能越高）',\r\n        slide: true,\r\n    })\r\n    set updateRate(val: number) {\r\n        if (val >= 0 && val <= 6) {\r\n            this._updateRate = val;\r\n        }\r\n    }\r\n    get updateRate() {\r\n        return this._updateRate;\r\n    }\r\n    //分帧渲染（每帧渲染的Item数量（<=0时关闭分帧渲染））\r\n    @property({\r\n        type: CCInteger,\r\n        range: [0, 12, 1],\r\n        tooltip: DEV && '逐帧渲染时，每帧渲染的Item数量（<=0时关闭分帧渲染）',\r\n        slide: true,\r\n    })\r\n    public frameByFrameRenderNum: number = 0;\r\n    //渲染事件（渲染器）\r\n    @property({\r\n        type: EventHandler,\r\n        tooltip: DEV && '渲染事件（渲染器）',\r\n    })\r\n    public renderEvent: EventHandler = new EventHandler();\r\n    //选择模式\r\n    @property({\r\n        type: Enum(SelectedType),\r\n        tooltip: DEV && '选择模式'\r\n    })\r\n    public selectedMode: SelectedType = SelectedType.NONE;\r\n    //触发选择事件\r\n    @property({\r\n        type: EventHandler,\r\n        tooltip: DEV && '触发选择事件',\r\n        visible() { return this.selectedMode > SelectedType.NONE; }\r\n    })\r\n    public selectedEvent: EventHandler = new EventHandler();\r\n    @property({\r\n        tooltip: DEV && '是否重复响应单选事件',\r\n        visible() { return this.selectedMode == SelectedType.SINGLE; }\r\n    })\r\n    public repeatEventSingle: boolean = false;\r\n\r\n    //当前选择id\r\n    private _selectedId: number = -1;\r\n    private _lastSelectedId: number;\r\n    private multSelected: number[];\r\n    set selectedId(val: number) {\r\n        let t: any = this;\r\n        let item: any;\r\n        switch (t.selectedMode) {\r\n            case SelectedType.SINGLE: {\r\n                if (!t.repeatEventSingle && val == t._selectedId)\r\n                    return;\r\n                item = t.getItemByListId(val);\r\n                // if (!item && val >= 0)\r\n                //     return;\r\n                let listItem: ListItem;\r\n                if (t._selectedId >= 0)\r\n                    t._lastSelectedId = t._selectedId;\r\n                else //如果＜0则取消选择，把_lastSelectedId也置空吧，如果以后有特殊需求再改吧。\r\n                    t._lastSelectedId = null;\r\n                t._selectedId = val;\r\n                if (item) {\r\n                    listItem = item.getComponent(ListItem);\r\n                    listItem.selected = true;\r\n                }\r\n                if (t._lastSelectedId >= 0 && t._lastSelectedId != t._selectedId) {\r\n                    let lastItem: any = t.getItemByListId(t._lastSelectedId);\r\n                    if (lastItem) {\r\n                        lastItem.getComponent(ListItem).selected = false;\r\n                    }\r\n                }\r\n                if (t.selectedEvent) {\r\n                    EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems));\r\n                }\r\n                break;\r\n            }\r\n            case SelectedType.MULT: {\r\n                item = t.getItemByListId(val);\r\n                if (!item)\r\n                    return;\r\n                let listItem = item.getComponent(ListItem);\r\n                if (t._selectedId >= 0)\r\n                    t._lastSelectedId = t._selectedId;\r\n                t._selectedId = val;\r\n                let bool: boolean = !listItem.selected;\r\n                listItem.selected = bool;\r\n                let sub: number = t.multSelected.indexOf(val);\r\n                if (bool && sub < 0) {\r\n                    t.multSelected.push(val);\r\n                } else if (!bool && sub >= 0) {\r\n                    t.multSelected.splice(sub, 1);\r\n                }\r\n                if (t.selectedEvent) {\r\n                    EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems), bool);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    get selectedId() {\r\n        return this._selectedId;\r\n    }\r\n    private _forceUpdate: boolean = false;\r\n    private _align: number;\r\n    private _horizontalDir: number;\r\n    private _verticalDir: number;\r\n    private _startAxis: number;\r\n    private _alignCalcType: number;\r\n    public content: Node;\r\n    private _contentUt: UITransform;\r\n    private firstListId: number;\r\n    public displayItemNum: number;\r\n    private _updateDone: boolean = true;\r\n    private _updateCounter: number;\r\n    public _actualNumItems: number;\r\n    private _cyclicNum: number;\r\n    private _cyclicPos1: number;\r\n    private _cyclicPos2: number;\r\n    //列表数量\r\n    @property({\r\n        serializable: false\r\n    })\r\n    private _numItems: number = 0;\r\n    set numItems(val: number) {\r\n        let t = this;\r\n        if (!t.checkInited(false))\r\n            return;\r\n        if (val == null || val < 0) {\r\n            console.error('numItems set the wrong::', val);\r\n            return;\r\n        }\r\n        t._actualNumItems = t._numItems = val;\r\n        t._forceUpdate = true;\r\n\r\n        if (t._virtual) {\r\n            t._resizeContent();\r\n            if (t.cyclic) {\r\n                t._numItems = t._cyclicNum * t._numItems;\r\n            }\r\n            t._onScrolling();\r\n            if (!t.frameByFrameRenderNum && t.slideMode == SlideType.PAGE)\r\n                t.curPageNum = t.nearestListId;\r\n        } else {\r\n            if (t.cyclic) {\r\n                t._resizeContent();\r\n                t._numItems = t._cyclicNum * t._numItems;\r\n            }\r\n            let layout: Layout = t.content.getComponent(Layout);\r\n            if (layout) {\r\n                layout.enabled = true;\r\n            }\r\n            t._delRedundantItem();\r\n\r\n            t.firstListId = 0;\r\n            if (t.frameByFrameRenderNum > 0) {\r\n                //先渲染几个出来\r\n                let len: number = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum;\r\n                for (let n: number = 0; n < len; n++) {\r\n                    t._createOrUpdateItem2(n);\r\n                }\r\n                if (t.frameByFrameRenderNum < t._numItems) {\r\n                    t._updateCounter = t.frameByFrameRenderNum;\r\n                    t._updateDone = false;\r\n                }\r\n            } else {\r\n                for (let n: number = 0; n < t._numItems; n++) {\r\n                    t._createOrUpdateItem2(n);\r\n                }\r\n                t.displayItemNum = t._numItems;\r\n            }\r\n        }\r\n    }\r\n    get numItems() {\r\n        return this._actualNumItems;\r\n    }\r\n\r\n    private _inited: boolean = false;\r\n    private _scrollView: ScrollView;\r\n    get scrollView() {\r\n        return this._scrollView;\r\n    }\r\n    private _layout: Layout;\r\n    private _resizeMode: number;\r\n    private _topGap: number;\r\n    private _rightGap: number;\r\n    private _bottomGap: number;\r\n    private _leftGap: number;\r\n\r\n    private _columnGap: number;\r\n    private _lineGap: number;\r\n    private _colLineNum: number;\r\n\r\n    private _lastDisplayData: number[];\r\n    public displayData: any[];\r\n    private _pool: NodePool;\r\n\r\n    private _itemTmp: any;\r\n    private _itemTmpUt: UITransform;\r\n    private _needUpdateWidget: boolean = false;\r\n    private _itemSize: Size;\r\n    private _sizeType: boolean;\r\n\r\n    public _customSize: any;\r\n\r\n    private frameCount: number;\r\n    private _aniDelRuning: boolean = false;\r\n    private _aniDelCB: Function;\r\n    private _aniDelItem: any;\r\n    private _aniDelBeforePos: Vec2;\r\n    private _aniDelBeforeScale: number;\r\n    private viewTop: number;\r\n    private viewRight: number;\r\n    private viewBottom: number;\r\n    private viewLeft: number;\r\n\r\n    private _doneAfterUpdate: boolean = false;\r\n\r\n    private elasticTop: number;\r\n    private elasticRight: number;\r\n    private elasticBottom: number;\r\n    private elasticLeft: number;\r\n\r\n    private scrollToListId: number;\r\n\r\n    private adhering: boolean = false;\r\n\r\n    private _adheringBarrier: boolean = false;\r\n    private nearestListId: number;\r\n\r\n    public curPageNum: number = 0;\r\n    private _beganPos: number;\r\n    private _scrollPos: number;\r\n    private _curScrollIsTouch: boolean;//当前滑动是否为手动\r\n\r\n    private _scrollToListId: number;\r\n    private _scrollToEndTime: number;\r\n    private _scrollToSo: any;\r\n\r\n    private _lack: boolean;\r\n    private _allItemSize: number;\r\n    private _allItemSizeNoEdge: number;\r\n\r\n    private _scrollItem: any;//当前控制 ScrollView 滚动的 Item\r\n\r\n    private _thisNodeUt: UITransform;\r\n\r\n\r\n    public onScrollEnded: Function\r\n    public onScrollToped: Function\r\n    //----------------------------------------------------------------------------\r\n\r\n    onLoad() {\r\n        this._init();\r\n    }\r\n\r\n    onDestroy() {\r\n        let t: any = this;\r\n        if (isValid(t._itemTmp))\r\n            t._itemTmp.destroy();\r\n        if (isValid(t.tmpNode))\r\n            t.tmpNode.destroy();\r\n        t._pool && t._pool.clear();\r\n    }\r\n\r\n    onEnable() {\r\n        // if (!EDITOR) \r\n        this._registerEvent();\r\n        this._init();\r\n        // 处理重新显示后，有可能上一次的动画移除还未播放完毕，导致动画卡住的问题\r\n        if (this._aniDelRuning) {\r\n            this._aniDelRuning = false;\r\n            if (this._aniDelItem) {\r\n                if (this._aniDelBeforePos) {\r\n                    this._aniDelItem.position = this._aniDelBeforePos;\r\n                    delete this._aniDelBeforePos;\r\n                }\r\n                if (this._aniDelBeforeScale) {\r\n                    this._aniDelItem.scale = this._aniDelBeforeScale;\r\n                    delete this._aniDelBeforeScale;\r\n                }\r\n                delete this._aniDelItem;\r\n            }\r\n            if (this._aniDelCB) {\r\n                this._aniDelCB();\r\n                delete this._aniDelCB;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        // if (!EDITOR) \r\n        this._unregisterEvent();\r\n    }\r\n    //注册事件\r\n    _registerEvent() {\r\n        let t: any = this;\r\n        t.node.on(Node.EventType.TOUCH_START, t._onTouchStart, t);\r\n        t.node.on('touch-up', t._onTouchUp, t);\r\n        t.node.on(Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t);\r\n        t.node.on('scroll-began', t._onScrollBegan, t);\r\n        t.node.on('scroll-ended', t._onScrollEnded, t);\r\n        t.node.on('scrolling', t._onScrolling, t);\r\n        t.node.on(Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    }\r\n    //卸载事件\r\n    _unregisterEvent() {\r\n        let t: any = this;\r\n        t.node.off(Node.EventType.TOUCH_START, t._onTouchStart, t);\r\n        t.node.off('touch-up', t._onTouchUp, t);\r\n        t.node.off(Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t);\r\n        t.node.off('scroll-began', t._onScrollBegan, t);\r\n        t.node.off('scroll-ended', t._onScrollEnded, t);\r\n        t.node.off('scrolling', t._onScrolling, t);\r\n        t.node.off(Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    }\r\n    //初始化各种..\r\n    _init() {\r\n        let t: any = this;\r\n        if (t._inited)\r\n            return;\r\n\r\n        t._thisNodeUt = t.node.getComponent(UITransform);\r\n        t._scrollView = t.node.getComponent(ScrollView);\r\n\r\n        t.content = t._scrollView.content;\r\n        t._contentUt = t.content.getComponent(UITransform);\r\n        if (!t.content) {\r\n            console.error(t.node.name + \"'s ScrollView unset content!\");\r\n            return;\r\n        }\r\n\r\n        t._layout = t.content.getComponent(Layout);\r\n\r\n        t._align = t._layout.type; //排列模式\r\n        t._resizeMode = t._layout.resizeMode; //自适应模式\r\n        t._startAxis = t._layout.startAxis;\r\n\r\n        t._topGap = t._layout.paddingTop; //顶边距\r\n        t._rightGap = t._layout.paddingRight; //右边距\r\n        t._bottomGap = t._layout.paddingBottom; //底边距\r\n        t._leftGap = t._layout.paddingLeft; //左边距\r\n\r\n        t._columnGap = t._layout.spacingX; //列距\r\n        t._lineGap = t._layout.spacingY; //行距\r\n\r\n        t._colLineNum; //列数或行数（非GRID模式则=1，表示单列或单行）;\r\n\r\n        t._verticalDir = t._layout.verticalDirection; //垂直排列子节点的方向\r\n        t._horizontalDir = t._layout.horizontalDirection; //水平排列子节点的方向\r\n\r\n        t.setTemplateItem(instantiate(t.templateType == TemplateType.PREFAB ? t.tmpPrefab : t.tmpNode));\r\n\r\n        // 特定的滑动模式处理\r\n        if (t._slideMode == SlideType.ADHERING || t._slideMode == SlideType.PAGE) {\r\n            t._scrollView.inertia = false;\r\n            t._scrollView._onMouseWheel = function () {\r\n                return;\r\n            };\r\n        }\r\n        if (!t.virtual)         // lackCenter 仅支持 Virtual 模式\r\n            t.lackCenter = false;\r\n\r\n        t._lastDisplayData = []; //最后一次刷新的数据\r\n        t.displayData = []; //当前数据\r\n        t._pool = new NodePool();    //这是个池子..\r\n        t._forceUpdate = false;         //是否强制更新\r\n        t._updateCounter = 0;           //当前分帧渲染帧数\r\n        t._updateDone = true;           //分帧渲染是否完成\r\n\r\n        t.curPageNum = 0;               //当前页数\r\n\r\n        if (t.cyclic || 0) {\r\n            t._scrollView._processAutoScrolling = this._processAutoScrolling.bind(t);\r\n            t._scrollView._startBounceBackIfNeeded = function () {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        switch (t._align) {\r\n            case Layout.Type.HORIZONTAL: {\r\n                switch (t._horizontalDir) {\r\n                    case Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                        t._alignCalcType = 1;\r\n                        break;\r\n                    case Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                        t._alignCalcType = 2;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.VERTICAL: {\r\n                switch (t._verticalDir) {\r\n                    case Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                        t._alignCalcType = 3;\r\n                        break;\r\n                    case Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                        t._alignCalcType = 4;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.GRID: {\r\n                switch (t._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL:\r\n                        switch (t._verticalDir) {\r\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                                t._alignCalcType = 3;\r\n                                break;\r\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                                t._alignCalcType = 4;\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case Layout.AxisDirection.VERTICAL:\r\n                        switch (t._horizontalDir) {\r\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                                t._alignCalcType = 1;\r\n                                break;\r\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                                t._alignCalcType = 2;\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // 清空 content\r\n        // t.content.children.forEach((child: Node) => {\r\n        //     child.removeFromParent();\r\n        //     if (child != t.tmpNode && child.isValid)\r\n        //         child.destroy();\r\n        // });\r\n        t.content.removeAllChildren();\r\n        t._inited = true;\r\n    }\r\n    /**\r\n     * 为了实现循环列表，必须覆写cc.ScrollView的某些函数\r\n     * @param {Number} dt\r\n     */\r\n    _processAutoScrolling(dt: number) {\r\n\r\n        // ------------- scroll-view 里定义的一些常量 -------------\r\n        const OUT_OF_BOUNDARY_BREAKING_FACTOR = 0.05;\r\n        const EPSILON = 1e-4;\r\n        const ZERO = new Vec3();\r\n        const quintEaseOut = (time: number) => {\r\n            time -= 1;\r\n            return (time * time * time * time * time + 1);\r\n        };\r\n        // ------------- scroll-view 里定义的一些常量 -------------\r\n\r\n        let sv: ScrollView = this._scrollView;\r\n\r\n        const isAutoScrollBrake = sv['_isNecessaryAutoScrollBrake']();\r\n        const brakingFactor = isAutoScrollBrake ? OUT_OF_BOUNDARY_BREAKING_FACTOR : 1;\r\n        sv['_autoScrollAccumulatedTime'] += dt * (1 / brakingFactor);\r\n\r\n        let percentage = Math.min(1, sv['_autoScrollAccumulatedTime'] / sv['_autoScrollTotalTime']);\r\n        if (sv['_autoScrollAttenuate']) {\r\n            percentage = quintEaseOut(percentage);\r\n        }\r\n\r\n        const clonedAutoScrollTargetDelta = sv['_autoScrollTargetDelta'].clone();\r\n        clonedAutoScrollTargetDelta.multiplyScalar(percentage);\r\n        const clonedAutoScrollStartPosition = sv['_autoScrollStartPosition'].clone();\r\n        clonedAutoScrollStartPosition.add(clonedAutoScrollTargetDelta);\r\n        let reachedEnd = Math.abs(percentage - 1) <= EPSILON;\r\n\r\n        const fireEvent = Math.abs(percentage - 1) <= sv['getScrollEndedEventTiming']();\r\n        if (fireEvent && !sv['_isScrollEndedWithThresholdEventFired']) {\r\n            sv['_dispatchEvent'](ScrollView.EventType.SCROLL_ENG_WITH_THRESHOLD);\r\n            sv['_isScrollEndedWithThresholdEventFired'] = true;\r\n        }\r\n\r\n        if (sv['elastic']) {\r\n            const brakeOffsetPosition = clonedAutoScrollStartPosition.clone();\r\n            brakeOffsetPosition.subtract(sv['_autoScrollBrakingStartPosition']);\r\n            if (isAutoScrollBrake) {\r\n                brakeOffsetPosition.multiplyScalar(brakingFactor);\r\n            }\r\n            clonedAutoScrollStartPosition.set(sv['_autoScrollBrakingStartPosition']);\r\n            clonedAutoScrollStartPosition.add(brakeOffsetPosition);\r\n        } else {\r\n            const moveDelta = clonedAutoScrollStartPosition.clone();\r\n            moveDelta.subtract(sv['_getContentPosition']());\r\n            const outOfBoundary = sv['_getHowMuchOutOfBoundary'](moveDelta);\r\n            if (!outOfBoundary.equals(ZERO, EPSILON)) {\r\n                clonedAutoScrollStartPosition.add(outOfBoundary);\r\n                reachedEnd = true;\r\n            }\r\n        }\r\n\r\n        if (reachedEnd) {\r\n            sv['_autoScrolling'] = false;\r\n        }\r\n\r\n        const deltaMove = new Vec3(clonedAutoScrollStartPosition);\r\n        deltaMove.subtract(sv['_getContentPosition']());\r\n        sv['_clampDelta'](deltaMove);\r\n        sv['_moveContent'](deltaMove, reachedEnd);\r\n        sv['_dispatchEvent'](ScrollView.EventType.SCROLLING);\r\n\r\n        if (!sv['_autoScrolling']) {\r\n            sv['_isBouncing'] = false;\r\n            sv['_scrolling'] = false;\r\n            sv['_dispatchEvent'](ScrollView.EventType.SCROLL_ENDED);\r\n        }\r\n    }\r\n    //设置模板Item\r\n    setTemplateItem(item: any) {\r\n        if (!item)\r\n            return;\r\n        let t: any = this;\r\n        t._itemTmp = item;\r\n        t._itemTmpUt = item.getComponent(UITransform);\r\n\r\n        if (t._resizeMode == Layout.ResizeMode.CHILDREN)\r\n            t._itemSize = t._layout.cellSize;\r\n        else {\r\n            let itemUt: UITransform = item.getComponent(UITransform);\r\n            t._itemSize = new Size(itemUt.width, itemUt.height);\r\n        }\r\n\r\n        //获取ListItem，如果没有就取消选择模式\r\n        let com: any = item.getComponent(ListItem);\r\n        let remove = false;\r\n        if (!com)\r\n            remove = true;\r\n        // if (com) {\r\n        //     if (!com._btnCom && !item.getComponent(cc.Button)) {\r\n        //         remove = true;\r\n        //     }\r\n        // }\r\n        if (remove) {\r\n            t.selectedMode = SelectedType.NONE;\r\n        }\r\n        com = item.getComponent(Widget);\r\n        if (com && com.enabled) {\r\n            t._needUpdateWidget = true;\r\n        }\r\n        if (t.selectedMode == SelectedType.MULT)\r\n            t.multSelected = [];\r\n\r\n        switch (t._align) {\r\n            case Layout.Type.HORIZONTAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = false;\r\n                break;\r\n            case Layout.Type.VERTICAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = true;\r\n                break;\r\n            case Layout.Type.GRID:\r\n                switch (t._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL:\r\n                        //计算列数\r\n                        let trimW: number = t._contentUt.width - t._leftGap - t._rightGap;\r\n                        t._colLineNum = Math.floor((trimW + t._columnGap) / (t._itemSize.width + t._columnGap));\r\n                        t._sizeType = true;\r\n                        break;\r\n                    case Layout.AxisDirection.VERTICAL:\r\n                        //计算行数\r\n                        let trimH: number = t._contentUt.height - t._topGap - t._bottomGap;\r\n                        t._colLineNum = Math.floor((trimH + t._lineGap) / (t._itemSize.height + t._lineGap));\r\n                        t._sizeType = false;\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * 检查是否初始化\r\n     * @param {Boolean} printLog 是否打印错误信息\r\n     * @returns\r\n     */\r\n    checkInited(printLog: boolean = true) {\r\n        if (!this._inited) {\r\n            if (printLog)\r\n                console.error('List initialization not completed!');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    //禁用 Layout 组件，自行计算 Content Size\r\n    _resizeContent() {\r\n        let t: any = this;\r\n        let result: number;\r\n\r\n        switch (t._align) {\r\n            case Layout.Type.HORIZONTAL: {\r\n                if (t._customSize) {\r\n                    let fixed: any = t._getFixedSize(null);\r\n                    result = t._leftGap + fixed.val + (t._itemSize.width * (t._numItems - fixed.count)) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                } else {\r\n                    result = t._leftGap + (t._itemSize.width * t._numItems) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.VERTICAL: {\r\n                if (t._customSize) {\r\n                    let fixed: any = t._getFixedSize(null);\r\n                    result = t._topGap + fixed.val + (t._itemSize.height * (t._numItems - fixed.count)) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                } else {\r\n                    result = t._topGap + (t._itemSize.height * t._numItems) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                }\r\n                break;\r\n            }\r\n            case Layout.Type.GRID: {\r\n                //网格模式不支持居中\r\n                if (t.lackCenter)\r\n                    t.lackCenter = false;\r\n                switch (t._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL:\r\n                        let lineNum: number = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._topGap + (t._itemSize.height * lineNum) + (t._lineGap * (lineNum - 1)) + t._bottomGap;\r\n                        break;\r\n                    case Layout.AxisDirection.VERTICAL:\r\n                        let colNum: number = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._leftGap + (t._itemSize.width * colNum) + (t._columnGap * (colNum - 1)) + t._rightGap;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let layout: Layout = t.content.getComponent(Layout);\r\n        if (layout)\r\n            layout.enabled = false;\r\n\r\n        t._allItemSize = result;\r\n        t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? (t._topGap + t._bottomGap) : (t._leftGap + t._rightGap));\r\n\r\n        if (t.cyclic) {\r\n            let totalSize: number = (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\r\n\r\n            t._cyclicPos1 = 0;\r\n            totalSize -= t._cyclicPos1;\r\n            t._cyclicNum = Math.ceil(totalSize / t._allItemSizeNoEdge) + 1;\r\n            let spacing: number = t._sizeType ? t._lineGap : t._columnGap;\r\n            t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + spacing;\r\n            t._cyclicAllItemSize = t._allItemSize + (t._allItemSizeNoEdge * (t._cyclicNum - 1)) + (spacing * (t._cyclicNum - 1));\r\n            t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;\r\n            t._cycilcAllItemSizeNoEdge += spacing * (t._cyclicNum - 1);\r\n            // cc.log('_cyclicNum ->', t._cyclicNum, t._allItemSizeNoEdge, t._allItemSize, t._cyclicPos1, t._cyclicPos2);\r\n        }\r\n\r\n        t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\r\n        let slideOffset: number = ((!t._lack || !t.lackCenter) && t.lackSlide) ? 0 : .1;\r\n\r\n        let targetWH: number = t._lack ? ((t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width) - slideOffset) : (t.cyclic ? t._cyclicAllItemSize : t._allItemSize);\r\n        if (targetWH < 0)\r\n            targetWH = 0;\r\n\r\n        if (t._sizeType) {\r\n            t._contentUt.height = targetWH;\r\n        } else {\r\n            t._contentUt.width = targetWH;\r\n        }\r\n\r\n        // cc.log('_resizeContent()  numItems =', t._numItems, '，content =', t.content);\r\n    }\r\n\r\n    //滚动进行时...\r\n    _onScrolling(ev: Event = null) {\r\n        if (this.frameCount == null)\r\n            this.frameCount = this._updateRate;\r\n        if (!this._forceUpdate && (ev && ev.type != 'scroll-ended') && this.frameCount > 0) {\r\n            this.frameCount--;\r\n            return;\r\n        } else\r\n            this.frameCount = this._updateRate;\r\n\r\n        if (this._aniDelRuning)\r\n            return;\r\n\r\n        //循环列表处理\r\n        if (this.cyclic) {\r\n            let scrollPos: any = this.content.getPosition();\r\n            scrollPos = this._sizeType ? scrollPos.y : scrollPos.x;\r\n\r\n            let addVal = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap);\r\n            let add: any = this._sizeType ? new Vec3(0, addVal, 0) : new Vec3(addVal, 0, 0);\r\n\r\n            let contentPos = this.content.getPosition();\r\n\r\n            switch (this._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        contentPos.set(-this._cyclicPos2, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos += add;\r\n                        // }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        contentPos.set(-this._cyclicPos1, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos -= add;\r\n                        // }\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        contentPos.set(this._cyclicPos2, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        contentPos.set(this._cyclicPos1, contentPos.y, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        contentPos.set(contentPos.x, this._cyclicPos2, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        contentPos.set(contentPos.x, this._cyclicPos1, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        contentPos.set(contentPos.x, -this._cyclicPos2, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\r\n                        }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        contentPos.set(contentPos.x, -this._cyclicPos1, contentPos.z);\r\n                        this.content.setPosition(contentPos);\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this._calcViewPos();\r\n\r\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\r\n        if (this._sizeType) {\r\n            vTop = this.viewTop;\r\n            vBottom = this.viewBottom;\r\n        } else {\r\n            vRight = this.viewRight;\r\n            vLeft = this.viewLeft;\r\n        }\r\n\r\n        if (this._virtual) {\r\n            this.displayData = [];\r\n            let itemPos: any;\r\n\r\n            let curId: number = 0;\r\n            let endId: number = this._numItems - 1;\r\n\r\n            if (this._customSize) {\r\n                let breakFor: boolean = false;\r\n                //如果该item的位置在可视区域内，就推入displayData\r\n                for (; curId <= endId && !breakFor; curId++) {\r\n                    itemPos = this._calcItemPos(curId);\r\n                    switch (this._align) {\r\n                        case Layout.Type.HORIZONTAL:\r\n                            if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case Layout.Type.VERTICAL:\r\n                            if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case Layout.Type.GRID:\r\n                            switch (this._startAxis) {\r\n                                case Layout.AxisDirection.HORIZONTAL:\r\n                                    if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                                case Layout.AxisDirection.VERTICAL:\r\n                                    if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                let ww: number = this._itemSize.width + this._columnGap;\r\n                let hh: number = this._itemSize.height + this._lineGap;\r\n                switch (this._alignCalcType) {\r\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                        curId = (vLeft - this._leftGap) / ww;\r\n                        endId = (vRight - this._leftGap) / ww;\r\n                        break;\r\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                        curId = (-vRight - this._rightGap) / ww;\r\n                        endId = (-vLeft - this._rightGap) / ww;\r\n                        break;\r\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                        curId = (-vTop - this._topGap) / hh;\r\n                        endId = (-vBottom - this._topGap) / hh;\r\n                        break;\r\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                        curId = (vBottom - this._bottomGap) / hh;\r\n                        endId = (vTop - this._bottomGap) / hh;\r\n                        break;\r\n                }\r\n                curId = Math.floor(curId) * this._colLineNum;\r\n                endId = Math.ceil(endId) * this._colLineNum;\r\n                endId--;\r\n                if (curId < 0)\r\n                    curId = 0;\r\n                if (endId >= this._numItems)\r\n                    endId = this._numItems - 1;\r\n                for (; curId <= endId; curId++) {\r\n                    this.displayData.push(this._calcItemPos(curId));\r\n                }\r\n            }\r\n            this._delRedundantItem();\r\n            if (this.displayData.length <= 0 || !this._numItems) { //if none, delete all.\r\n                this._lastDisplayData = [];\r\n                return;\r\n            }\r\n            this.firstListId = this.displayData[0].id;\r\n            this.displayItemNum = this.displayData.length;\r\n\r\n            let len: number = this._lastDisplayData.length;\r\n\r\n            let haveDataChange: boolean = this.displayItemNum != len;\r\n            if (haveDataChange) {\r\n                // 如果是逐帧渲染，需要排序\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    this._lastDisplayData.sort((a, b) => { return a - b });\r\n                }\r\n                // 因List的显示数据是有序的，所以只需要判断数组长度是否相等，以及头、尾两个元素是否相等即可。\r\n                haveDataChange = this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[len - 1];\r\n            }\r\n\r\n            if (this._forceUpdate || haveDataChange) {    //如果是强制更新\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    // if (this._updateDone) {\r\n                    // this._lastDisplayData = [];\r\n                    //逐帧渲染\r\n                    if (this._numItems > 0) {\r\n                        if (!this._updateDone) {\r\n                            this._doneAfterUpdate = true;\r\n                        } else {\r\n                            this._updateCounter = 0;\r\n                        }\r\n                        this._updateDone = false;\r\n                    } else {\r\n                        this._updateCounter = 0;\r\n                        this._updateDone = true;\r\n                    }\r\n                    // }\r\n                } else {\r\n                    //直接渲染\r\n                    this._lastDisplayData = [];\r\n                    // cc.log('List Display Data II::', this.displayData);\r\n                    for (let c = 0; c < this.displayItemNum; c++) {\r\n                        this._createOrUpdateItem(this.displayData[c]);\r\n                    }\r\n                    this._forceUpdate = false;\r\n                }\r\n            }\r\n            this._calcNearestItem();\r\n        }\r\n    }\r\n    //计算可视范围\r\n    _calcViewPos() {\r\n        let scrollPos: any = this.content.getPosition();\r\n        switch (this._alignCalcType) {\r\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                this.elasticLeft = scrollPos.x > 0 ? scrollPos.x : 0;\r\n                this.viewLeft = (scrollPos.x < 0 ? -scrollPos.x : 0) - this.elasticLeft;\r\n\r\n                this.viewRight = this.viewLeft + this._thisNodeUt.width;\r\n                this.elasticRight = this.viewRight > this._contentUt.width ? Math.abs(this.viewRight - this._contentUt.width) : 0;\r\n                this.viewRight += this.elasticRight;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                this.elasticRight = scrollPos.x < 0 ? -scrollPos.x : 0;\r\n                this.viewRight = (scrollPos.x > 0 ? -scrollPos.x : 0) + this.elasticRight;\r\n                this.viewLeft = this.viewRight - this._thisNodeUt.width;\r\n                this.elasticLeft = this.viewLeft < -this._contentUt.width ? Math.abs(this.viewLeft + this._contentUt.width) : 0;\r\n                this.viewLeft -= this.elasticLeft;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                this.elasticTop = scrollPos.y < 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewTop = (scrollPos.y > 0 ? -scrollPos.y : 0) + this.elasticTop;\r\n                this.viewBottom = this.viewTop - this._thisNodeUt.height;\r\n                this.elasticBottom = this.viewBottom < -this._contentUt.height ? Math.abs(this.viewBottom + this._contentUt.height) : 0;\r\n                this.viewBottom += this.elasticBottom;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                this.elasticBottom = scrollPos.y > 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewBottom = (scrollPos.y < 0 ? -scrollPos.y : 0) - this.elasticBottom;\r\n                this.viewTop = this.viewBottom + this._thisNodeUt.height;\r\n                this.elasticTop = this.viewTop > this._contentUt.height ? Math.abs(this.viewTop - this._contentUt.height) : 0;\r\n                this.viewTop -= this.elasticTop;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n        }\r\n    }\r\n    //计算位置 根据id\r\n    _calcItemPos(id: number) {\r\n        let width: number, height: number, top: number, bottom: number, left: number, right: number, itemX: number, itemY: number;\r\n        switch (this._align) {\r\n            case Layout.Type.HORIZONTAL:\r\n                switch (this._horizontalDir) {\r\n                    case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * (id - fixed.count)) + (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            left -= this._leftGap;\r\n                            let offset: number = (this._contentUt.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            left += offset;\r\n                        }\r\n                        right = left + width;\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: left + (this._itemTmpUt.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                    case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * (id - fixed.count)) - (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            right += this._rightGap;\r\n                            let offset: number = (this._contentUt.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            right -= offset;\r\n                        }\r\n                        left = right - width;\r\n                        return {\r\n                            id: id,\r\n                            right: right,\r\n                            left: left,\r\n                            x: left + (this._itemTmpUt.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            case Layout.Type.VERTICAL: {\r\n                switch (this._verticalDir) {\r\n                    case Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * (id - fixed.count)) - (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                        } else {\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            top += this._topGap;\r\n                            let offset: number = (this._contentUt.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            top -= offset;\r\n                        }\r\n                        bottom = top - height;\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmpUt.anchorY * height),\r\n                        };\r\n                    }\r\n                    case Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * (id - fixed.count)) + (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                        } else {\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            bottom -= this._bottomGap;\r\n                            let offset: number = (this._contentUt.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            bottom += offset;\r\n                        }\r\n                        top = bottom + height;\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmpUt.anchorY * height),\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            case Layout.Type.GRID: {\r\n                let colLine: number = Math.floor(id / this._colLineNum);\r\n                switch (this._startAxis) {\r\n                    case Layout.AxisDirection.HORIZONTAL: {\r\n                        switch (this._verticalDir) {\r\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                top = -this._topGap - ((this._itemSize.height + this._lineGap) * colLine);\r\n                                bottom = top - this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmpUt.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * colLine);\r\n                                top = bottom + this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmpUt.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemX = this._leftGap + ((id % this._colLineNum) * (this._itemSize.width + this._columnGap));\r\n                        switch (this._horizontalDir) {\r\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                itemX += (this._itemTmpUt.anchorX * this._itemSize.width);\r\n                                itemX -= (this._contentUt.anchorX * this._contentUt.width);\r\n                                break;\r\n                            }\r\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                itemX += ((1 - this._itemTmpUt.anchorX) * this._itemSize.width);\r\n                                itemX -= ((1 - this._contentUt.anchorX) * this._contentUt.width);\r\n                                itemX *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                    case Layout.AxisDirection.VERTICAL: {\r\n                        switch (this._horizontalDir) {\r\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                left = this._leftGap + ((this._itemSize.width + this._columnGap) * colLine);\r\n                                right = left + this._itemSize.width;\r\n                                itemX = left + (this._itemTmpUt.anchorX * this._itemSize.width);\r\n                                itemX -= (this._contentUt.anchorX * this._contentUt.width);\r\n                                break;\r\n                            }\r\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                right = -this._rightGap - ((this._itemSize.width + this._columnGap) * colLine);\r\n                                left = right - this._itemSize.width;\r\n                                itemX = left + (this._itemTmpUt.anchorX * this._itemSize.width);\r\n                                itemX += ((1 - this._contentUt.anchorX) * this._contentUt.width);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemY = -this._topGap - ((id % this._colLineNum) * (this._itemSize.height + this._lineGap));\r\n                        switch (this._verticalDir) {\r\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                itemY -= ((1 - this._itemTmpUt.anchorY) * this._itemSize.height);\r\n                                itemY += ((1 - this._contentUt.anchorY) * this._contentUt.height);\r\n                                break;\r\n                            }\r\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                itemY -= ((this._itemTmpUt.anchorY) * this._itemSize.height);\r\n                                itemY += (this._contentUt.anchorY * this._contentUt.height);\r\n                                itemY *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    //计算已存在的Item的位置\r\n    _calcExistItemPos(id: number) {\r\n        let item: any = this.getItemByListId(id);\r\n        if (!item)\r\n            return null;\r\n        let ut: UITransform = item.getComponent(UITransform);\r\n        let pos: Vec3 = item.getPosition();\r\n        let data: any = {\r\n            id: id,\r\n            x: pos.x,\r\n            y: pos.y,\r\n        }\r\n        if (this._sizeType) {\r\n            data.top = pos.y + (ut.height * (1 - ut.anchorY));\r\n            data.bottom = pos.y - (ut.height * ut.anchorY);\r\n        } else {\r\n            data.left = pos.x - (ut.width * ut.anchorX);\r\n            data.right = pos.x + (ut.width * (1 - ut.anchorX));\r\n        }\r\n        return data;\r\n    }\r\n    //获取Item位置\r\n    getItemPos(id: number) {\r\n        if (this._virtual)\r\n            return this._calcItemPos(id);\r\n        else {\r\n            if (this.frameByFrameRenderNum)\r\n                return this._calcItemPos(id);\r\n            else\r\n                return this._calcExistItemPos(id);\r\n        }\r\n    }\r\n    //获取固定尺寸\r\n    _getFixedSize(listId: number) {\r\n        if (!this._customSize)\r\n            return null;\r\n        if (listId == null)\r\n            listId = this._numItems;\r\n        let fixed: number = 0;\r\n        let count: number = 0;\r\n        for (let id in this._customSize) {\r\n            if (parseInt(id) < listId) {\r\n                fixed += this._customSize[id];\r\n                count++;\r\n            }\r\n        }\r\n        return {\r\n            val: fixed,\r\n            count: count,\r\n        }\r\n    }\r\n    //滚动结束时..\r\n    _onScrollBegan() {\r\n        this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;\r\n    }\r\n    //滚动结束时..\r\n    _onScrollEnded() {\r\n        let t: any = this;\r\n        t._curScrollIsTouch = false;\r\n\r\n        // 获取当前滚动位置和最大滚动位置\r\n        const scrollOffset = t._scrollView.getScrollOffset();\r\n        const maxScrollOffset = t._scrollView.getMaxScrollOffset();\r\n\r\n        // 判断是否滚动到顶部\r\n        if (t._sizeType) { // 纵向滚动\r\n            if (scrollOffset.y <= 0) {\r\n                //console.log('已经滚动到顶部');\r\n                if (this.onScrollToped) {\r\n                    this.onScrollToped()\r\n                }\r\n                // 在这里触发滚动到顶部的事件或逻辑\r\n            }\r\n        } else { // 横向滚动\r\n            if (scrollOffset.x <= 0) {\r\n                //console.log('已经滚动到顶部');\r\n                if (this.onScrollToped) {\r\n                    this.onScrollToped()\r\n                }\r\n                // 在这里触发滚动到顶部的事件或逻辑\r\n            }\r\n        }\r\n\r\n        // 判断是否滚动到底部\r\n        if (t._sizeType) { // 纵向滚动\r\n            if (scrollOffset.y >= maxScrollOffset.y) {\r\n                //console.log('已经滚动到底部');\r\n                if (this.onScrollEnded) {\r\n                    this.onScrollEnded()\r\n                }\r\n                // 在这里触发滚动到底部的事件或逻辑\r\n            }\r\n        } else { // 横向滚动\r\n            if (scrollOffset.x >= maxScrollOffset.x) {\r\n                //console.log('已经滚动到底部');\r\n                if (this.onScrollEnded) {\r\n                    this.onScrollEnded()\r\n                }\r\n                // 在这里触发滚动到底部的事件或逻辑\r\n            }\r\n        }\r\n\r\n\r\n        if (t.scrollToListId != null) {\r\n            let item: any = t.getItemByListId(t.scrollToListId);\r\n            t.scrollToListId = null;\r\n            if (item) {\r\n                tween(item)\r\n                    .to(.1, { scale: 1.06 })\r\n                    .to(.1, { scale: 1 })\r\n                    .start();\r\n            }\r\n        }\r\n        t._onScrolling();\r\n\r\n        if (t._slideMode == SlideType.ADHERING &&\r\n            !t.adhering\r\n        ) {\r\n            //cc.log(t.adhering, t._scrollView.isAutoScrolling(), t._scrollView.isScrolling());\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null && t._curScrollIsTouch) {\r\n                this._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n    }\r\n    // 触摸时\r\n    _onTouchStart(ev, captureListeners) {\r\n        if (this._scrollView['_hasNestedViewGroup'](ev, captureListeners))\r\n            return;\r\n        this._curScrollIsTouch = true;\r\n        let isMe = ev.eventPhase === Event.AT_TARGET && ev.target === this.node;\r\n        if (!isMe) {\r\n            let itemNode: any = ev.target;\r\n            while (itemNode._listId == null && itemNode.parent)\r\n                itemNode = itemNode.parent;\r\n            this._scrollItem = itemNode._listId != null ? itemNode : ev.target;\r\n        }\r\n    }\r\n    //触摸抬起时..\r\n    _onTouchUp() {\r\n        let t: any = this;\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (this.adhering)\r\n                this._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                this._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    }\r\n\r\n    _onTouchCancelled(ev, captureListeners) {\r\n        let t = this;\r\n        if (t._scrollView['_hasNestedViewGroup'](ev, captureListeners) || ev.simulate)\r\n            return;\r\n\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (t.adhering)\r\n                t._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                t._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    }\r\n    //当尺寸改变\r\n    _onSizeChanged() {\r\n        if (this.checkInited(false))\r\n            this._onScrolling();\r\n    }\r\n    //当Item自适应\r\n    _onItemAdaptive(item: any) {\r\n        let ut: UITransform = item.getComponent(UITransform);\r\n        // if (this.checkInited(false)) {\r\n        if (\r\n            (!this._sizeType && ut.width != this._itemSize.width)\r\n            || (this._sizeType && ut.height != this._itemSize.height)\r\n        ) {\r\n            if (!this._customSize)\r\n                this._customSize = {};\r\n            let val = this._sizeType ? ut.height : ut.width;\r\n            if (this._customSize[item._listId] != val) {\r\n                this._customSize[item._listId] = val;\r\n                this._resizeContent();\r\n                // this.content.children.forEach((child: Node) => {\r\n                //     this._updateItemPos(child);\r\n                // });\r\n                this.updateAll();\r\n                // 如果当前正在运行 scrollTo，肯定会不准确，在这里做修正\r\n                if (this._scrollToListId != null) {\r\n                    this._scrollPos = null;\r\n                    this.unschedule(this._scrollToSo);\r\n                    this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - ((new Date()).getTime() / 1000)));\r\n                }\r\n            }\r\n        }\r\n        // }\r\n    }\r\n    //PAGE粘附\r\n    _pageAdhere() {\r\n        let t = this;\r\n        if (!t.cyclic && (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0))\r\n            return;\r\n        let curPos = t._sizeType ? t.viewTop : t.viewLeft;\r\n        let dis = (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width) * t.pageDistance;\r\n        let canSkip = Math.abs(t._beganPos - curPos) > dis;\r\n        if (canSkip) {\r\n            let timeInSecond = .5;\r\n            switch (t._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (t._beganPos > curPos) {\r\n                        t.prePage(timeInSecond);\r\n                        // cc.log('_pageAdhere   PPPPPPPPPPPPPPP');\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                        // cc.log('_pageAdhere   NNNNNNNNNNNNNNN');\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (t._beganPos < curPos) {\r\n                        t.prePage(timeInSecond);\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                    }\r\n                    break;\r\n            }\r\n        } else if (t.elasticTop <= 0 && t.elasticRight <= 0 && t.elasticBottom <= 0 && t.elasticLeft <= 0) {\r\n            t.adhere();\r\n        }\r\n        t._beganPos = null;\r\n    }\r\n    //粘附\r\n    adhere() {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0)\r\n            return;\r\n        t.adhering = true;\r\n        t._calcNearestItem();\r\n        let offset: number = (t._sizeType ? t._topGap : t._leftGap) / (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\r\n        let timeInSecond: number = .7;\r\n        t.scrollTo(t.nearestListId, timeInSecond, offset);\r\n    }\r\n    //Update..\r\n    update() {\r\n        if (this.frameByFrameRenderNum <= 0 || this._updateDone)\r\n            return;\r\n        // cc.log(this.displayData.length, this._updateCounter, this.displayData[this._updateCounter]);\r\n        if (this._virtual) {\r\n            let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this.displayItemNum ? this.displayItemNum : (this._updateCounter + this.frameByFrameRenderNum);\r\n            for (let n: number = this._updateCounter; n < len; n++) {\r\n                let data: any = this.displayData[n];\r\n                if (data) {\r\n                    this._createOrUpdateItem(data);\r\n                }\r\n            }\r\n\r\n            if (this._updateCounter >= this.displayItemNum - 1) { //最后一个\r\n                if (this._doneAfterUpdate) {\r\n                    this._updateCounter = 0;\r\n                    this._updateDone = false;\r\n                    // if (!this._scrollView.isScrolling())\r\n                    this._doneAfterUpdate = false;\r\n                } else {\r\n                    this._updateDone = true;\r\n                    this._delRedundantItem();\r\n                    this._forceUpdate = false;\r\n                    this._calcNearestItem();\r\n                    if (this.slideMode == SlideType.PAGE)\r\n                        this.curPageNum = this.nearestListId;\r\n                }\r\n            } else {\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            }\r\n        } else {\r\n            if (this._updateCounter < this._numItems) {\r\n                let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this._numItems ? this._numItems : (this._updateCounter + this.frameByFrameRenderNum);\r\n                for (let n: number = this._updateCounter; n < len; n++) {\r\n                    this._createOrUpdateItem2(n);\r\n                }\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            } else {\r\n                this._updateDone = true;\r\n                this._calcNearestItem();\r\n                if (this.slideMode == SlideType.PAGE)\r\n                    this.curPageNum = this.nearestListId;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 创建或更新Item（虚拟列表用）\r\n     * @param {Object} data 数据\r\n     */\r\n    _createOrUpdateItem(data: any) {\r\n        let item: any = this.getItemByListId(data.id);\r\n        if (!item) { //如果不存在\r\n            let canGet: boolean = this._pool.size() > 0;\r\n            if (canGet) {\r\n                item = this._pool.get();\r\n                // cc.log('从池中取出::   旧id =', item['_listId'], '，新id =', data.id, item);\r\n            } else {\r\n                item = instantiate(this._itemTmp);\r\n                // cc.log('新建::', data.id, item);\r\n            }\r\n            if (!canGet || !isValid(item)) {\r\n                item = instantiate(this._itemTmp);\r\n                canGet = false;\r\n            }\r\n            if (item._listId != data.id) {\r\n                item._listId = data.id;\r\n                let ut: UITransform = item.getComponent(UITransform);\r\n                ut.setContentSize(this._itemSize);\r\n            }\r\n            item.setPosition(new Vec3(data.x, data.y, 0));\r\n            this._resetItemSize(item);\r\n            this.content.addChild(item);\r\n            if (canGet && this._needUpdateWidget) {\r\n                let widget: Widget = item.getComponent(Widget);\r\n                if (widget)\r\n                    widget.updateAlignment();\r\n            }\r\n            item.setSiblingIndex(this.content.children.length - 1);\r\n\r\n            let listItem: ListItem = item.getComponent(ListItem);\r\n            item['listItem'] = listItem;\r\n            if (listItem) {\r\n                listItem.listId = data.id;\r\n                listItem.list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\r\n            item.setPosition(new Vec3(data.x, data.y, 0));\r\n            this._resetItemSize(item);\r\n            // cc.log('ADD::', data.id, item);\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        }\r\n        this._resetItemSize(item);\r\n\r\n        this._updateListItem(item['listItem']);\r\n        if (this._lastDisplayData.indexOf(data.id) < 0) {\r\n            this._lastDisplayData.push(data.id);\r\n        }\r\n    }\r\n    //创建或更新Item（非虚拟列表用）\r\n    _createOrUpdateItem2(listId: number) {\r\n        let item: any = this.content.children[listId];\r\n        let listItem: ListItem;\r\n        if (!item) { //如果不存在\r\n            item = instantiate(this._itemTmp);\r\n            item._listId = listId;\r\n            this.content.addChild(item);\r\n            listItem = item.getComponent(ListItem);\r\n            item['listItem'] = listItem;\r\n            if (listItem) {\r\n                listItem.listId = listId;\r\n                listItem.list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\r\n            item._listId = listId;\r\n            if (listItem)\r\n                listItem.listId = listId;\r\n            if (this.renderEvent) {\r\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n            }\r\n        }\r\n        this._updateListItem(listItem);\r\n        if (this._lastDisplayData.indexOf(listId) < 0) {\r\n            this._lastDisplayData.push(listId);\r\n        }\r\n    }\r\n\r\n    _updateListItem(listItem: ListItem) {\r\n        if (!listItem)\r\n            return;\r\n        if (this.selectedMode > SelectedType.NONE) {\r\n            let item: any = listItem.node;\r\n            switch (this.selectedMode) {\r\n                case SelectedType.SINGLE:\r\n                    listItem.selected = this.selectedId == item._listId;\r\n                    break;\r\n                case SelectedType.MULT:\r\n                    listItem.selected = this.multSelected.indexOf(item._listId) >= 0;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    //仅虚拟列表用\r\n    _resetItemSize(item: any) {\r\n        return;\r\n        let size: number;\r\n        let ut: UITransform = item.getComponent(UITransform);\r\n        if (this._customSize && this._customSize[item._listId]) {\r\n            size = this._customSize[item._listId];\r\n        } else {\r\n            if (this._colLineNum > 1)\r\n                ut.setContentSize(this._itemSize);\r\n            else\r\n                size = this._sizeType ? this._itemSize.height : this._itemSize.width;\r\n        }\r\n        if (size) {\r\n            if (this._sizeType)\r\n                ut.height = size;\r\n            else\r\n                ut.width = size;\r\n        }\r\n    }\r\n    /**\r\n     * 更新Item位置\r\n     * @param {Number||Node} listIdOrItem\r\n     */\r\n    _updateItemPos(listIdOrItem: any) {\r\n        let item: any = isNaN(listIdOrItem) ? listIdOrItem : this.getItemByListId(listIdOrItem);\r\n        let pos: any = this.getItemPos(item._listId);\r\n        item.setPosition(pos.x, pos.y);\r\n    }\r\n    /**\r\n     * 设置多选\r\n     * @param {Array} args 可以是单个listId，也可是个listId数组\r\n     * @param {Boolean} bool 值，如果为null的话，则直接用args覆盖\r\n     */\r\n    setMultSelected(args: any, bool: boolean) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        if (bool == null) {\r\n            t.multSelected = args;\r\n        } else {\r\n            let listId: number, sub: number;\r\n            if (bool) {\r\n                for (let n: number = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub < 0) {\r\n                        t.multSelected.push(listId);\r\n                    }\r\n                }\r\n            } else {\r\n                for (let n: number = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub >= 0) {\r\n                        t.multSelected.splice(sub, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        t._forceUpdate = true;\r\n        t._onScrolling();\r\n    }\r\n    /**\r\n     * 获取多选数据\r\n     * @returns\r\n     */\r\n    getMultSelected() {\r\n        return this.multSelected;\r\n    }\r\n    /**\r\n     * 多选是否有选择\r\n     * @param {number} listId 索引\r\n     * @returns\r\n     */\r\n    hasMultSelected(listId: number) {\r\n        return this.multSelected && this.multSelected.indexOf(listId) >= 0;\r\n    }\r\n    /**\r\n     * 更新指定的Item\r\n     * @param {Array} args 单个listId，或者数组\r\n     * @returns\r\n     */\r\n    updateItem(args: any) {\r\n        if (!this.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        for (let n: number = 0, len: number = args.length; n < len; n++) {\r\n            let listId: number = args[n];\r\n            let item: any = this.getItemByListId(listId);\r\n            if (item)\r\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n        }\r\n    }\r\n    /**\r\n     * 更新全部\r\n     */\r\n    updateAll() {\r\n        if (!this.checkInited())\r\n            return;\r\n        this.numItems = this.numItems;\r\n    }\r\n    /**\r\n     * 根据ListID获取Item\r\n     * @param {Number} listId\r\n     * @returns\r\n     */\r\n    getItemByListId(listId: number) {\r\n        if (this.content) {\r\n            for (let n: number = this.content.children.length - 1; n >= 0; n--) {\r\n                let item: any = this.content.children[n];\r\n                if (item._listId == listId)\r\n                    return item;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取在显示区域外的Item\r\n     * @returns\r\n     */\r\n    _getOutsideItem() {\r\n        let item: any;\r\n        let result: any[] = [];\r\n        for (let n: number = this.content.children.length - 1; n >= 0; n--) {\r\n            item = this.content.children[n];\r\n            if (!this.displayData.find(d => d.id == item._listId)) {\r\n                result.push(item);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    //删除显示区域以外的Item\r\n    _delRedundantItem() {\r\n        if (this._virtual) {\r\n            let arr: any[] = this._getOutsideItem();\r\n            for (let n: number = arr.length - 1; n >= 0; n--) {\r\n                let item: any = arr[n];\r\n                if (this._scrollItem && item._listId == this._scrollItem._listId)\r\n                    continue;\r\n                item.isCached = true;\r\n                this._pool.put(item);\r\n                for (let m: number = this._lastDisplayData.length - 1; m >= 0; m--) {\r\n                    if (this._lastDisplayData[m] == item._listId) {\r\n                        this._lastDisplayData.splice(m, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // cc.log('存入::', str, '    pool.length =', this._pool.length);\r\n        } else {\r\n            while (this.content.children.length > this._numItems) {\r\n                this._delSingleItem(this.content.children[this.content.children.length - 1]);\r\n            }\r\n        }\r\n    }\r\n    //删除单个Item\r\n    _delSingleItem(item: any) {\r\n        // cc.log('DEL::', item['_listId'], item);\r\n        item.removeFromParent();\r\n        if (item.destroy)\r\n            item.destroy();\r\n        item = null;\r\n    }\r\n    /** \r\n     * 动效删除Item（此方法只适用于虚拟列表，即_virtual=true）\r\n     * 一定要在回调函数里重新设置新的numItems进行刷新，毕竟本List是靠数据驱动的。\r\n     */\r\n    aniDelItem(listId: number, callFunc: Function, aniType: number) {\r\n        let t: any = this;\r\n\r\n        if (!t.checkInited() || t.cyclic || !t._virtual)\r\n            return console.error('This function is not allowed to be called!');\r\n\r\n        if (!callFunc)\r\n            return console.error('CallFunc are not allowed to be NULL, You need to delete the corresponding index in the data array in the CallFunc!');\r\n\r\n        if (t._aniDelRuning)\r\n            return console.warn('Please wait for the current deletion to finish!');\r\n\r\n        let item: any = t.getItemByListId(listId);\r\n        let listItem: ListItem;\r\n        if (!item) {\r\n            callFunc(listId);\r\n            return;\r\n        } else {\r\n            listItem = item.getComponent(ListItem);\r\n        }\r\n        t._aniDelRuning = true;\r\n        t._aniDelCB = callFunc;\r\n        t._aniDelItem = item;\r\n        t._aniDelBeforePos = item.position;\r\n        t._aniDelBeforeScale = item.scale;\r\n        let curLastId: number = t.displayData[t.displayData.length - 1].id;\r\n        let resetSelectedId: boolean = listItem.selected;\r\n        listItem.showAni(aniType, () => {\r\n            //判断有没有下一个，如果有的话，创建粗来\r\n            let newId: number;\r\n            if (curLastId < t._numItems - 2) {\r\n                newId = curLastId + 1;\r\n            }\r\n            if (newId != null) {\r\n                let newData: any = t._calcItemPos(newId);\r\n                t.displayData.push(newData);\r\n                if (t._virtual)\r\n                    t._createOrUpdateItem(newData);\r\n                else\r\n                    t._createOrUpdateItem2(newId);\r\n            } else\r\n                t._numItems--;\r\n            if (t.selectedMode == SelectedType.SINGLE) {\r\n                if (resetSelectedId) {\r\n                    t._selectedId = -1;\r\n                } else if (t._selectedId - 1 >= 0) {\r\n                    t._selectedId--;\r\n                }\r\n            } else if (t.selectedMode == SelectedType.MULT && t.multSelected.length) {\r\n                let sub: number = t.multSelected.indexOf(listId);\r\n                if (sub >= 0) {\r\n                    t.multSelected.splice(sub, 1);\r\n                }\r\n                //多选的数据，在其后的全部减一\r\n                for (let n: number = t.multSelected.length - 1; n >= 0; n--) {\r\n                    let id: number = t.multSelected[n];\r\n                    if (id >= listId)\r\n                        t.multSelected[n]--;\r\n                }\r\n            }\r\n            if (t._customSize) {\r\n                if (t._customSize[listId])\r\n                    delete t._customSize[listId];\r\n                let newCustomSize: any = {};\r\n                let size: number;\r\n                for (let id in t._customSize) {\r\n                    size = t._customSize[id];\r\n                    let idNumber: number = parseInt(id);\r\n                    newCustomSize[idNumber - (idNumber >= listId ? 1 : 0)] = size;\r\n                }\r\n                t._customSize = newCustomSize;\r\n            }\r\n            //后面的Item向前怼的动效\r\n            let sec: number = .2333;\r\n            let twe: Tween<Node>, haveCB: boolean;\r\n            for (let n: number = newId != null ? newId : curLastId; n >= listId + 1; n--) {\r\n                item = t.getItemByListId(n);\r\n                if (item) {\r\n                    let posData: any = t._calcItemPos(n - 1);\r\n                    twe = tween(item)\r\n                        .to(sec, { position: new Vec3(posData.x, posData.y, 0) });\r\n\r\n                    if (n <= listId + 1) {\r\n                        haveCB = true;\r\n                        twe.call(() => {\r\n                            t._aniDelRuning = false;\r\n                            callFunc(listId);\r\n                            delete t._aniDelCB;\r\n                        });\r\n                    }\r\n                    twe.start();\r\n                }\r\n            }\r\n            if (!haveCB) {\r\n                t._aniDelRuning = false;\r\n                callFunc(listId);\r\n                t._aniDelCB = null;\r\n            }\r\n        }, true);\r\n    }\r\n    /**\r\n     * 滚动到..\r\n     * @param {Number} listId 索引（如果<0，则滚到首个Item位置，如果>=_numItems，则滚到最末Item位置）\r\n     * @param {Number} timeInSecond 时间\r\n     * @param {Number} offset 索引目标位置偏移，0-1\r\n     * @param {Boolean} overStress 滚动后是否强调该Item（这只是个实验功能）\r\n     */\r\n    scrollTo(listId: number, timeInSecond: number = .5, offset: number = null, overStress: boolean = false) {\r\n        let t = this;\r\n        if (!t.checkInited(false))\r\n            return;\r\n        // t._scrollView.stopAutoScroll();\r\n        if (timeInSecond == null)   //默认0.5\r\n            timeInSecond = .5;\r\n        else if (timeInSecond < 0)\r\n            timeInSecond = 0;\r\n        if (listId < 0)\r\n            listId = 0;\r\n        else if (listId >= t._numItems)\r\n            listId = t._numItems - 1;\r\n        // 以防设置了numItems之后layout的尺寸还未更新\r\n        if (!t._virtual && t._layout && t._layout.enabled)\r\n            t._layout.updateLayout();\r\n\r\n        let pos = t.getItemPos(listId);\r\n        if (!pos) {\r\n            return DEV && console.error('pos is null', listId);\r\n        }\r\n        let targetX: number, targetY: number;\r\n\r\n        switch (t._alignCalcType) {\r\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                targetX = pos.left;\r\n                if (offset != null)\r\n                    targetX -= t._thisNodeUt.width * offset;\r\n                else\r\n                    targetX -= t._leftGap;\r\n                pos = new Vec3(targetX, 0, 0);\r\n                break;\r\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                targetX = pos.right - t._thisNodeUt.width;\r\n                if (offset != null)\r\n                    targetX += t._thisNodeUt.width * offset;\r\n                else\r\n                    targetX += t._rightGap;\r\n                pos = new Vec3(targetX + t._contentUt.width, 0, 0);\r\n                break;\r\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                targetY = pos.top;\r\n                if (offset != null)\r\n                    targetY += t._thisNodeUt.height * offset;\r\n                else\r\n                    targetY += t._topGap;\r\n                pos = new Vec3(0, -targetY, 0);\r\n                break;\r\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                targetY = pos.bottom + t._thisNodeUt.height;\r\n                if (offset != null)\r\n                    targetY -= t._thisNodeUt.height * offset;\r\n                else\r\n                    targetY -= t._bottomGap;\r\n                pos = new Vec3(0, -targetY + t._contentUt.height, 0);\r\n                break;\r\n        }\r\n        let viewPos: any = t.content.getPosition();\r\n        viewPos = Math.abs(t._sizeType ? viewPos.y : viewPos.x);\r\n\r\n        let comparePos = t._sizeType ? pos.y : pos.x;\r\n        let runScroll = Math.abs((t._scrollPos != null ? t._scrollPos : viewPos) - comparePos) > .5;\r\n        // cc.log(runScroll, t._scrollPos, viewPos, comparePos)\r\n\r\n        // t._scrollView.stopAutoScroll();\r\n        if (runScroll) {\r\n            t._scrollView.scrollToOffset(pos, timeInSecond);\r\n            t._scrollToListId = listId;\r\n            t._scrollToEndTime = ((new Date()).getTime() / 1000) + timeInSecond;\r\n            // cc.log(listId, t.content.width, t.content.getPosition(), pos);\r\n            t._scrollToSo = t.scheduleOnce(() => {\r\n                if (!t._adheringBarrier) {\r\n                    t.adhering = t._adheringBarrier = false;\r\n                }\r\n                t._scrollPos =\r\n                    t._scrollToListId =\r\n                    t._scrollToEndTime =\r\n                    t._scrollToSo =\r\n                    null;\r\n                //cc.log('2222222222', t._adheringBarrier)\r\n                if (overStress) {\r\n                    // t.scrollToListId = listId;\r\n                    let item = t.getItemByListId(listId);\r\n                    if (item) {\r\n                        tween(item)\r\n                            .to(.1, { scale: 1.05 })\r\n                            .to(.1, { scale: 1 })\r\n                            .start();\r\n                    }\r\n                }\r\n            }, timeInSecond + .1);\r\n\r\n            if (timeInSecond <= 0) {\r\n                t._onScrolling();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 计算当前滚动窗最近的Item\r\n     */\r\n    _calcNearestItem() {\r\n        let t: any = this;\r\n        t.nearestListId = null;\r\n        let data: any, center: number;\r\n\r\n        if (t._virtual)\r\n            t._calcViewPos();\r\n\r\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\r\n        vTop = t.viewTop;\r\n        vRight = t.viewRight;\r\n        vBottom = t.viewBottom;\r\n        vLeft = t.viewLeft;\r\n\r\n        let breakFor: boolean = false;\r\n        for (let n = 0; n < t.content.children.length && !breakFor; n += t._colLineNum) {\r\n            data = t._virtual ? t.displayData[n] : t._calcExistItemPos(n);\r\n            if (data) {\r\n                center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n                switch (t._alignCalcType) {\r\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                        if (data.right >= vLeft) {\r\n                            t.nearestListId = data.id;\r\n                            if (vLeft > center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                        if (data.left <= vRight) {\r\n                            t.nearestListId = data.id;\r\n                            if (vRight < center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                        if (data.bottom <= vTop) {\r\n                            t.nearestListId = data.id;\r\n                            if (vTop < center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                        if (data.top >= vBottom) {\r\n                            t.nearestListId = data.id;\r\n                            if (vBottom > center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        //判断最后一个Item。。。（哎，这些判断真心恶心，判断了前面的还要判断最后一个。。。一开始呢，就只有一个布局（单列布局），那时候代码才三百行，后来就想着完善啊，艹..这坑真深，现在这行数都一千五了= =||）\r\n        data = t._virtual ? t.displayData[t.displayItemNum - 1] : t._calcExistItemPos(t._numItems - 1);\r\n        if (data && data.id == t._numItems - 1) {\r\n            center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n            switch (t._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                    if (vRight > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                    if (vLeft < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (vBottom < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (vTop > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n            }\r\n        }\r\n        // cc.log('t.nearestListId =', t.nearestListId);\r\n    }\r\n    //上一页\r\n    prePage(timeInSecond: number = .5) {\r\n        // cc.log('👈');\r\n        if (!this.checkInited())\r\n            return;\r\n        this.skipPage(this.curPageNum - 1, timeInSecond);\r\n    }\r\n    //下一页\r\n    nextPage(timeInSecond: number = .5) {\r\n        // cc.log('👉');\r\n        if (!this.checkInited())\r\n            return;\r\n        this.skipPage(this.curPageNum + 1, timeInSecond);\r\n    }\r\n    //跳转到第几页\r\n    skipPage(pageNum: number, timeInSecond: number) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t._slideMode != SlideType.PAGE)\r\n            return console.error('This function is not allowed to be called, Must SlideMode = PAGE!');\r\n        if (pageNum < 0 || pageNum >= t._numItems)\r\n            return;\r\n        if (t.curPageNum == pageNum)\r\n            return;\r\n        // cc.log(pageNum);\r\n        t.curPageNum = pageNum;\r\n        if (t.pageChangeEvent) {\r\n            EventHandler.emitEvents([t.pageChangeEvent], pageNum);\r\n        }\r\n        t.scrollTo(pageNum, timeInSecond);\r\n    }\r\n    //计算 CustomSize（这个函数还是保留吧，某些罕见的情况的确还是需要手动计算customSize的）\r\n    calcCustomSize(numItems: number) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!t._itemTmp)\r\n            return console.error('Unset template item!');\r\n        if (!t.renderEvent)\r\n            return console.error('Unset Render-Event!');\r\n        t._customSize = {};\r\n        let temp: any = instantiate(t._itemTmp);\r\n        let ut: UITransform = temp.getComponent(UITransform);\r\n        t.content.addChild(temp);\r\n        for (let n: number = 0; n < numItems; n++) {\r\n            EventHandler.emitEvents([t.renderEvent], temp, n);\r\n            if (ut.height != t._itemSize.height || ut.width != t._itemSize.width) {\r\n                t._customSize[n] = t._sizeType ? ut.height : ut.width;\r\n            }\r\n        }\r\n        if (!Object.keys(t._customSize).length)\r\n            t._customSize = null;\r\n        temp.removeFromParent();\r\n        if (temp.destroy)\r\n            temp.destroy();\r\n        return t._customSize;\r\n    }\r\n}"]}